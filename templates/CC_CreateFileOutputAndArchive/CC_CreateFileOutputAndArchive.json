{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureSqlDatabase1": {
			"type": "string"
		},
		"LocalFileServer": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CC_CreateFileOutputAndArchive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update RESPONSE_FILE not have input file_copy1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabase1')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''P'',\n\tDESCRIPTION = ''Query response detail ',string(pipeline().parameters.countRecord),' record'' WHERE RES_ID =',pipeline().parameters.resId,';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "create file output",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update RESPONSE_FILE not have input file_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "errorLine",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMaster",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CCLocalFileToWrite",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.outputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Clear temp file detail",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Creste file Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabase1')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE_DETAIL\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Clear temp file",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Clear temp file detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabase1')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Creste file Success",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "create file output archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabase1')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''Query response detail ',string(pipeline().parameters.countRecord),' record | create file ',pipeline().parameters.fileName,' in path ',pipeline().parameters.outputPath,' complete'' WHERE RES_ID =',pipeline().parameters.resId,';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Creste file Error",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "create file output",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AzureSqlDatabase1')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''',activity('create file output').Error.Message,''' WHERE RES_ID =',pipeline().parameters.resId,';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Get Metadata file created",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "create file output",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.outputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists",
								"size",
								"columnCount"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "create file output archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata file created",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "COLUMN",
										"value": {
											"value": "@concat(pipeline().parameters.fileName,'|',coalesce(activity('Get Metadata file created').output?.size,'0'))",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": " SELECT 'ONE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "COLUMN"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlMaster",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "CCLocalFileToWrite",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.outputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileNameArchive",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"SCHEMA": {
						"type": "string"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"fileType": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"outputPath": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					},
					"fileNameArchive": {
						"type": "string"
					},
					"countRecord": {
						"type": "string"
					},
					"resId": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMaster')]",
				"[concat(variables('factoryId'), '/datasets/CCLocalFileToWrite')]",
				"[concat(variables('factoryId'), '/datasets/CCLocalFileMasterNotSplit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "PAR_ROW_ID",
						"type": "varchar"
					},
					{
						"name": "LOV_TYPE",
						"type": "varchar"
					},
					{
						"name": "LOV_NAME",
						"type": "varchar"
					},
					{
						"name": "DISPLAY_VAL",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL1",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL2",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL3",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL4",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL5",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL6",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL7",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL8",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL9",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL10",
						"type": "varchar"
					},
					{
						"name": "TEXT_DESC",
						"type": "varchar"
					},
					{
						"name": "ORDER_BY",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GROUP_TYPE",
						"type": "varchar"
					},
					{
						"name": "ACTIVE_FLG",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "CC_CFG_LOV"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCLocalFileToWrite')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LocalFileServer')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCLocalFileMasterNotSplit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('LocalFileServer')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "''",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}