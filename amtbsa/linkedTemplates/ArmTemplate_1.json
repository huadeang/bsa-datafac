{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "amtbsa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "PAR_ROW_ID",
						"type": "varchar"
					},
					{
						"name": "LOV_TYPE",
						"type": "varchar"
					},
					{
						"name": "LOV_NAME",
						"type": "varchar"
					},
					{
						"name": "DISPLAY_VAL",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL1",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL2",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL3",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL4",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL5",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL6",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL7",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL8",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL9",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL10",
						"type": "varchar"
					},
					{
						"name": "TEXT_DESC",
						"type": "varchar"
					},
					{
						"name": "ORDER_BY",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GROUP_TYPE",
						"type": "varchar"
					},
					{
						"name": "ACTIVE_FLG",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "CC_CFG_LOV"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableFileTempDetail1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FILE_DTL_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "FILE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FILE_LINE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DEV",
					"table": "CC_TEMP_FILE_DETAIL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTestBillingTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlBillingDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "ACCNT_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_SUB_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "BILL_NAME",
						"type": "varchar"
					},
					{
						"name": "BILL_CYCLE",
						"type": "varchar"
					},
					{
						"name": "INVOICING_COMPANY",
						"type": "varchar"
					},
					{
						"name": "PAYMENT_METHOD",
						"type": "varchar"
					},
					{
						"name": "MASTER_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "BILLING_STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "REGISTER_DT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "ARPU",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "CREDIT_GRADE",
						"type": "decimal",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "DEBT_NEGO_FLG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "TEST_CC_BILLING"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCBillingFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "CC_BILLING_202204221005.csv",
						"folderPath": "review"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ROW_ID",
						"type": "String"
					},
					{
						"name": "CREATED",
						"type": "String"
					},
					{
						"name": "CREATED_BY",
						"type": "String"
					},
					{
						"name": "LAST_UPD",
						"type": "String"
					},
					{
						"name": "LAST_UPD_BY",
						"type": "String"
					},
					{
						"name": "ACCNT_NO",
						"type": "String"
					},
					{
						"name": "ACCNT_CATEGORY",
						"type": "String"
					},
					{
						"name": "ACCNT_SUB_CATEGORY",
						"type": "String"
					},
					{
						"name": "BILL_NAME",
						"type": "String"
					},
					{
						"name": "BILL_CYCLE",
						"type": "String"
					},
					{
						"name": "INVOICING_COMPANY",
						"type": "String"
					},
					{
						"name": "PAYMENT_METHOD",
						"type": "String"
					},
					{
						"name": "MASTER_ACCNT_ID",
						"type": "String"
					},
					{
						"name": "STATUS_CD",
						"type": "String"
					},
					{
						"name": "BILLING_STATUS_CD",
						"type": "String"
					},
					{
						"name": "REGISTER_DT",
						"type": "String"
					},
					{
						"name": "ARPU",
						"type": "String"
					},
					{
						"name": "CREDIT_GRADE",
						"type": "String"
					},
					{
						"name": "DEBT_NEGO_FLG",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCLocalFileMasterNotSplit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalFileServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "''",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCLocalFileMasterPath')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalFileServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string",
						"defaultValue": "*"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCLocalFileToWrite')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalFileServer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCResReviewTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BA_NO",
						"type": "varchar"
					},
					{
						"name": "FLAG",
						"type": "varchar"
					},
					{
						"name": "DATE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cc_res_review"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCTableFileTempDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FILE_DTL_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "FILE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FILE_LINE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DEV",
					"table": "CC_TEMP_FILE_DETAIL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RES_Review_Credit_Limit_20220225_141502.dat",
						"folderPath": "demo",
						"container": "credit-control"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoBillingCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DemoBillingFileServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "CC_BILLING_202204221005.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ROW_ID",
						"type": "String"
					},
					{
						"name": "CREATED",
						"type": "String"
					},
					{
						"name": "CREATED_BY",
						"type": "String"
					},
					{
						"name": "LAST_UPD",
						"type": "String"
					},
					{
						"name": "LAST_UPD_BY",
						"type": "String"
					},
					{
						"name": "ACCNT_NO",
						"type": "String"
					},
					{
						"name": "ACCNT_CATEGORY",
						"type": "String"
					},
					{
						"name": "ACCNT_SUB_CATEGORY",
						"type": "String"
					},
					{
						"name": "BILL_NAME",
						"type": "String"
					},
					{
						"name": "BILL_CYCLE",
						"type": "String"
					},
					{
						"name": "INVOICING_COMPANY",
						"type": "String"
					},
					{
						"name": "PAYMENT_METHOD",
						"type": "String"
					},
					{
						"name": "MASTER_ACCNT_ID",
						"type": "String"
					},
					{
						"name": "STATUS_CD",
						"type": "String"
					},
					{
						"name": "BILLING_STATUS_CD",
						"type": "String"
					},
					{
						"name": "REGISTER_DT",
						"type": "String"
					},
					{
						"name": "ARPU",
						"type": "String"
					},
					{
						"name": "CREDIT_GRADE",
						"type": "String"
					},
					{
						"name": "DEBT_NEGO_FLG",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCCBilling')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "ACCNT_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_SUB_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "BILL_NAME",
						"type": "varchar"
					},
					{
						"name": "BILL_CYCLE",
						"type": "varchar"
					},
					{
						"name": "INVOICING_COMPANY",
						"type": "varchar"
					},
					{
						"name": "PAYMENT_METHOD",
						"type": "varchar"
					},
					{
						"name": "MASTER_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "BILLING_STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "REGISTER_DT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "ARPU",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "CREDIT_GRADE",
						"type": "decimal",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "DEBT_NEGO_FLG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "TEST_CC_BILLING"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_CreateFileOutputAndArchive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert response file onprocess",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tRES_TYPE,\n\tSTATUS,\n\tFILE_NAME) OUTPUT INSERTED.RES_ID VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',pipeline().parameters.fileType,''',\n\t''O'',''',pipeline().parameters.fileName,''');')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Set resId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert response file onprocess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resId",
							"value": {
								"value": "@string(first(first(activity('insert response file onprocess').output.resultSets).rows).RES_ID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup file detail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set resId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlMaster",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If not Have input",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup file detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Lookup file detail').output.value)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Update RESPONSE_FILE not have input file_copy1",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''P'',\n\tDESCRIPTION = ''Query response detail ',string(activity('Lookup file detail').output.count),' record'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "create file output",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update RESPONSE_FILE not have input file_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "errorLine",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlMaster",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CCLocalFileToWrite",
											"type": "DatasetReference",
											"parameters": {
												"filePath": {
													"value": "@pipeline().parameters.outputPath",
													"type": "Expression"
												},
												"fileName": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clear temp file detail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Creste file Success",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE_DETAIL\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Clear temp file",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Clear temp file detail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Creste file Success",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "create file output archive",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''Query response detail ',string(activity('Lookup file detail').output.count),' record | create file ',pipeline().parameters.fileName,' in path ',pipeline().parameters.outputPath,' complete'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Creste file Error",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "create file output",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''',activity('create file output').Error.Message,''' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Get Metadata file created",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "create file output",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "CCLocalFileMasterNotSplit",
											"type": "DatasetReference",
											"parameters": {
												"filePath": {
													"value": "@pipeline().parameters.outputPath",
													"type": "Expression"
												},
												"fileName": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"size"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "create file output archive",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get Metadata file created",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"additionalColumns": [
												{
													"name": "COLUMN",
													"value": {
														"value": "@concat(pipeline().parameters.fileName,'|',activity('Get Metadata file created').output?.size)",
														"type": "Expression"
													}
												}
											],
											"sqlReaderQuery": {
												"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "errorLine",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlMaster",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CCLocalFileToWrite",
											"type": "DatasetReference",
											"parameters": {
												"filePath": {
													"value": "@pipeline().parameters.outputPath",
													"type": "Expression"
												},
												"fileName": {
													"value": "@pipeline().parameters.fileNameArchive",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Update RESPONSE_FILE not have input file",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = ',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),',\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,'''\n\tSTATUS = ''E'',\n\tDESCRIPTION = ''Query response file detail(file id = ',pipeline().parameters.fileId,' ) data not found'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SCHEMA": {
						"type": "string"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"fileType": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"outputPath": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					},
					"fileNameArchive": {
						"type": "string"
					}
				},
				"variables": {
					"resId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMaster')]",
				"[concat(variables('factoryId'), '/datasets/CCLocalFileToWrite')]",
				"[concat(variables('factoryId'), '/datasets/CCLocalFileMasterNotSplit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_CreateFileOutputNotArchive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert response file onprocess",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tRES_TYPE,\n\tSTATUS,\n\tFILE_NAME) OUTPUT INSERTED.RES_ID VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',pipeline().parameters.fileType,''',\n\t''O'',''',pipeline().parameters.fileName,''');')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Set resId",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "insert response file onprocess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "resId",
							"value": {
								"value": "@string(first(first(activity('insert response file onprocess').output.resultSets).rows).RES_ID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup file detail",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set resId",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlMaster",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "If not Have input",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup file detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Lookup file detail').output.value)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Update RESPONSE_FILE not have input file_copy1",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''P'',\n\tDESCRIPTION = ''Query response detail ',string(activity('Lookup file detail').output.count),' record'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "create file output",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Update RESPONSE_FILE not have input file_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT COALESCE(FILE_LINE+''|''+ERROR_MSG ,FILE_LINE) AS errorLine, STATUS AS status \n        FROM CREDIT_DEV.CC_TEMP_FILE_DETAIL \n        WHERE FILE_ID = ',pipeline().parameters.fileId,' ORDER BY FILE_DTL_ID;')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "errorLine",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlMaster",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CCLocalFileToWrite",
											"type": "DatasetReference",
											"parameters": {
												"filePath": {
													"value": "@pipeline().parameters.outputPath",
													"type": "Expression"
												},
												"fileName": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Clear temp file detail",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Creste file Success",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE_DETAIL\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Clear temp file",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Clear temp file detail",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('DELETE ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE\n        WHERE FILE_ID = ',pipeline().parameters.fileId,'')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Creste file Success",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "create file output",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''Query response detail ',string(activity('Lookup file detail').output.count),' record | create file ',pipeline().parameters.fileName,' in path ',pipeline().parameters.outputPath,' complete'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								},
								{
									"name": "Creste file Error",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "create file output",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tDESCRIPTION = ''',activity('create file output').Error.Message,'''  WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Update RESPONSE_FILE not have input file",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\tSET LAST_UPD = ',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),',\n\tLAST_UPD_BY = ''',pipeline().parameters.CREDIT_USER,'''\n\tSTATUS = ''E'',\n\tDESCRIPTION = ''Query response file detail(file id = ',pipeline().parameters.fileId,' ) data not found'' WHERE RES_ID =',variables('resId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SCHEMA": {
						"type": "string"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"fileType": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"outputPath": {
						"type": "string"
					},
					"fileId": {
						"type": "string"
					}
				},
				"variables": {
					"resId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMaster')]",
				"[concat(variables('factoryId'), '/datasets/CCLocalFileToWrite')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_ProcessFileDat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to CC_TEMP_FILE_DETAIL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set temp file dat Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "STATUS",
										"value": "S"
									},
									{
										"name": "FILE_ID",
										"value": {
											"value": "@variables('tempFileDatId')",
											"type": "Expression"
										}
									},
									{
										"name": "CREATED_BY",
										"value": {
											"value": "@pipeline().parameters.CREDIT_USER",
											"type": "Expression"
										}
									},
									{
										"name": "LAST_UPD_BY",
										"value": {
											"value": "@pipeline().parameters.CREDIT_USER",
											"type": "Expression"
										}
									},
									{
										"name": "CREATED",
										"value": {
											"value": "@convertTimeZone(utcNow(),'UTC','SE Asia Standard Time')",
											"type": "Expression"
										}
									},
									{
										"name": "LAST_UPD",
										"value": {
											"value": "@convertTimeZone(utcNow(),'UTC','SE Asia Standard Time')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CREATED",
											"type": "String"
										},
										"sink": {
											"name": "CREATED",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CREATED_BY",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LAST_UPD",
											"type": "String"
										},
										"sink": {
											"name": "LAST_UPD",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LAST_UPD_BY",
											"type": "String"
										},
										"sink": {
											"name": "LAST_UPD_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "FILE_LINE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FILE_ID",
											"type": "String"
										},
										"sink": {
											"name": "FILE_ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileDatName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CCTableFileTempDetail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert CC_TEMP_FILE_DAT",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Set fileNameArchive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tFILE_TYPE,\n\tFILE_NAME,\n\tFILE_NAME_ARCHIVE,\n\tFILE_PROCESS_TIME,\n\tSTATUS) OUTPUT INSERTED.FILE_ID  \n\tVALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',pipeline().parameters.FILE_TYPE,''',\n\t''',pipeline().parameters.fileDatName,''',\n\t''',variables('fileNameArchive'),''',\n\t''',variables('fileProcessTime'),''',\n\t''O'');')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Set temp file dat Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Insert CC_TEMP_FILE_DAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "tempFileDatId",
							"value": {
								"value": "@string(first(first(activity('Insert CC_TEMP_FILE_DAT').output.resultSets).rows).FILE_ID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Move Data Dat Succes",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Clean Up File line Null",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE\n\t',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''S''',\n\t', DESCRIPTION = ''Insert data on file update credit grade complete''',\n\t' WHERE FILE_ID =''',variables('tempFileDatId'),''';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Move Data Dat Error",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data to CC_TEMP_FILE_DETAIL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE\n\t',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E''',\n\t''', DESCRIPTION = ''', activity('Copy data to CC_TEMP_FILE_DETAIL').Error.Message,'''',\n\t' WHERE FILE_ID =''',variables('tempFileDatId'),''';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Copy File Sync To Achive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete File Dat To Achive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileSyncName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.moveInputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat(split(pipeline().parameters.fileSyncName,'.')[0],'_',variables('fileProcessTime'),'.',split(pipeline().parameters.fileSyncName,'.')[1])",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Copy File Dat To Achive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move Data Dat Succes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileDatName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.moveInputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@variables('fileNameArchive')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete File Dat To Achive",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy File Dat To Achive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileDatName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete File SyncTo Achive",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy File Sync To Achive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileSyncName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Set fileProcessTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "update file dat onprocess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileProcessTime",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcnow(),'UTC','North Asia Standard Time'),'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set fileNameArchive",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set fileProcessTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileNameArchive",
							"value": {
								"value": "@concat(split(pipeline().parameters.fileDatName,'.')[0],'_',variables('fileProcessTime'),'.',split(pipeline().parameters.fileDatName,'.')[1])",
								"type": "Expression"
							}
						}
					},
					{
						"name": "update file dat onprocess",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Lookup FIle Dat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''P'',',\n\t' DESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(length(activity('Lookup FIle Dat').output.value)),'record -> count process ',string(sub(length(activity('Lookup FIle Dat').output.value),2)),' record.''',\n\t' WHERE REVIEW_ID =''',pipeline().parameters.reviewId,''';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Lookup FIle Dat",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "CCLocalFileMasterNotSplit",
								"type": "DatasetReference",
								"parameters": {
									"filePath": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileDatName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "update review End Process Success",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Move Data Dat Succes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''S''',\n\t' WHERE REVIEW_ID =''',pipeline().parameters.reviewId,''';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "update review End Process Error",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Move Data Dat Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E''',\n\t' WHERE REVIEW_ID =''',pipeline().parameters.reviewId,''';')",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Clean Up File line Null",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data to CC_TEMP_FILE_DETAIL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE FROM ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE_DETAIL '\n    ,'WHERE FILE_ID = ',variables('tempFileDatId'),' AND FILE_LINE IS NULL;')",
										"type": "Expression"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fileDatName": {
						"type": "string"
					},
					"SCHEMA": {
						"type": "string"
					},
					"FILE_TYPE": {
						"type": "string"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"inputPath": {
						"type": "string"
					},
					"moveInputPath": {
						"type": "string"
					},
					"fileSyncName": {
						"type": "string"
					},
					"reviewId": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessTime": {
						"type": "String"
					},
					"fileNameArchive": {
						"type": "String"
					},
					"tempFileDatId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CCLocalFileMasterNotSplit')]",
				"[concat(variables('factoryId'), '/datasets/CCTableFileTempDetail')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyBillingFileToAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyBillingActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@activity('Lookup1').output.firstRow.val3",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CREATED",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREATED",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CREATED_BY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREATED_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LAST_UPD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LAST_UPD",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LAST_UPD_BY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LAST_UPD_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_NO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_NO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_CATEGORY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_SUB_CATEGORY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_SUB_CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILL_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILL_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILL_CYCLE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILL_CYCLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INVOICING_COMPANY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICING_COMPANY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PAYMENT_METHOD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PAYMENT_METHOD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MASTER_ACCNT_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MASTER_ACCNT_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS_CD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS_CD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILLING_STATUS_CD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILLING_STATUS_CD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGISTER_DT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "REGISTER_DT",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ARPU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARPU",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "CREDIT_GRADE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREDIT_GRADE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "DEBT_NEGO_FLG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBT_NEGO_FLG",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DemoBillingCSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTestBillingTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyBillingActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://www.google.com/search?q=success",
							"connectVia": {
								"referenceName": "SelfHostIntegration",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyBillingActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://www.google.com/search?q=failed",
							"connectVia": {
								"referenceName": "SelfHostIntegration",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from CREDIT.CC_CURRENT c where c.LOV_TYPE= 'CC_MONITOR_MASTER' and c.LOV_NAME = 'sff_cc_review_cl_res' and c.ACTIVE_FLG ='Y';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlMaster",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DemoBillingCSV')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTestBillingTable')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlMaster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ImportReviewBilling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ImportFileToCCBilling",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 1000,
								"preCopyScript": "delete from credit.test_cc_billing",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CREATED",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREATED",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "CREATED_BY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREATED_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LAST_UPD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LAST_UPD",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "LAST_UPD_BY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LAST_UPD_BY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_NO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_NO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_CATEGORY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCNT_SUB_CATEGORY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCNT_SUB_CATEGORY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILL_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILL_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILL_CYCLE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILL_CYCLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INVOICING_COMPANY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INVOICING_COMPANY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PAYMENT_METHOD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PAYMENT_METHOD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MASTER_ACCNT_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MASTER_ACCNT_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS_CD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS_CD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BILLING_STATUS_CD",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BILLING_STATUS_CD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGISTER_DT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "REGISTER_DT",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ARPU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ARPU",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 22
										}
									},
									{
										"source": {
											"name": "CREDIT_GRADE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CREDIT_GRADE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "DEBT_NEGO_FLG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBT_NEGO_FLG",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CCBillingFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TestCCBilling",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CCBillingFile')]",
				"[concat(variables('factoryId'), '/datasets/TestCCBilling')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ResReviewCreditLimit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupSyncFile",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.sync",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ResReviewSyncFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyDataToTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupSyncFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{activity('LookupSyncFile').output.firstRow.Prop_0}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "BA_NO",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "DATE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ResReviewCreditLimitData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CCResReviewTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DeleteDataFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyDataToTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ResReviewCreditLimitData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "DeleteSyncFile",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteDataFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ResReviewSyncFile",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-19T03:16:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CCResReviewTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ResReviewCreditLimitCheckSize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupSyncFile",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.sync",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ResReviewSyncFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetFileMetadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "LookupSyncFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ResReviewCreditLimitDataMatadata",
								"type": "DatasetReference",
								"parameters": {
									"filleName": {
										"value": "@{activity('LookupSyncFile').output.firstRow.Prop_0}",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"size"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetFileMetadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('GetFileMetadata').output.size,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyDataToTable",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@{activity('LookupSyncFile').output.firstRow.Prop_0}",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"validateDataConsistency": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "BA_NO",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "FLAG",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 3
													},
													"sink": {
														"name": "DATE",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ResReviewCreditLimitData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "CCResReviewTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "DeleteDataFile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyDataToTable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ResReviewCreditLimitData",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								},
								{
									"name": "DeleteSyncFile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "DeleteDataFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ResReviewSyncFile",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-19T03:16:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CCResReviewTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_FileOutputValidate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach file error",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.fileErrorList",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set fileId",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set fileType",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileId",
										"value": {
											"value": "@string(if(equals(trim(coalesce(string(item().FILE_ID),'')),''),null,string(item().FILE_ID)))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Some val is Null",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set fileOutputpath",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@or(or(or(equals(variables('fileId'),string(null)),equals(variables('fileName'),string(null))),equals(variables('outputPath'),string(null))),equals(variables('fileType'),string(null)))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set switchCaseVal_copy2",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "switchCaseValue",
													"value": "createErrorMesage"
												}
											}
										]
									}
								},
								{
									"name": "Set fileOutputpath",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set fileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "outputPath",
										"value": {
											"value": "@string(if(equals(trim(coalesce(item().OUTPUT_PATH,'')),''),null,item().OUTPUT_PATH))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set fileName",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set fileId",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileName",
										"value": {
											"value": "@string(if(equals(trim(coalesce(item().FILE_NAME,'')),''),null,item().FILE_NAME))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set fileType",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set fileAchriveName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileType",
										"value": {
											"value": "@string(if(equals(trim(coalesce(item().FILE_TYPE,'')),''),null,item().FILE_TYPE))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set fileAchriveName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileNameArchive",
										"value": {
											"value": "@string(if(equals(trim(coalesce(item().FILE_NAME_ARCHIVE,'')),''),null,item().FILE_NAME_ARCHIVE))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Switch case for execute",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "If fileNameArchive Have value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@variables('switchCaseValue')",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "createErrorMesage",
												"activities": [
													{
														"name": "insert error when config val error",
														"type": "Script",
														"dependsOn": [
															{
																"activity": "Set errorMsg",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														},
														"typeProperties": {
															"scripts": [
																{
																	"type": "Query",
																	"text": {
																		"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tRES_TYPE,\n\tSTATUS,\n\tDESCRIPTION) OUTPUT INSERTED.RES_ID VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''RESPONSE_FILE'',\n\t''E'',''Temp file Val ',variables('errorMessage'),' data not found.'');')",
																		"type": "Expression"
																	}
																}
															]
														}
													},
													{
														"name": "Set errorMsg",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "errorMessage",
															"value": {
																"value": "@concat(if(equals(variables('fileId'),string(null)),',file id',''),if(equals(variables('fileName'),string(null)),',file name',''),if(equals(variables('outputPath'),string(null)),',output path',''),if(equals(variables('fileType'),string(null)),',file type',''))",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"value": "createFileAndFileArchive",
												"activities": [
													{
														"name": "Execute CreateFileAndArchiveFile",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "CC_CreateFileOutputAndArchive",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"SCHEMA": {
																	"value": "@pipeline().parameters.SCHEMA",
																	"type": "Expression"
																},
																"CREDIT_USER": {
																	"value": "@pipeline().parameters.CREDIT_USER",
																	"type": "Expression"
																},
																"fileType": {
																	"value": "@variables('fileType')",
																	"type": "Expression"
																},
																"fileName": {
																	"value": "@variables('fileName')",
																	"type": "Expression"
																},
																"outputPath": {
																	"value": "@variables('outputPath')",
																	"type": "Expression"
																},
																"fileId": {
																	"value": "@variables('fileId')",
																	"type": "Expression"
																},
																"fileNameArchive": {
																	"value": "@variables('fileNameArchive')",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "insert review ExceptionError_copy1",
														"type": "Script",
														"dependsOn": [
															{
																"activity": "Execute CreateFileAndArchiveFile",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														},
														"typeProperties": {
															"scripts": [
																{
																	"type": "Query",
																	"text": {
																		"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tRES_TYPE,\n\tSTATUS,\n\tDESCRIPTION) OUTPUT INSERTED.RES_ID VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''RESPONSE_FILE'',\n\t''E'',''',string(activity('Execute CreateFileAndArchiveFile').Error),''');')",
																		"type": "Expression"
																	}
																}
															]
														}
													}
												]
											},
											{
												"value": "createFileAndNotCreateFileArchive",
												"activities": [
													{
														"name": "Execute create file output",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "CC_CreateFileOutputNotArchive",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"SCHEMA": {
																	"value": "@pipeline().parameters.SCHEMA",
																	"type": "Expression"
																},
																"CREDIT_USER": {
																	"value": "@pipeline().parameters.CREDIT_USER",
																	"type": "Expression"
																},
																"fileType": {
																	"value": "@variables('fileType')",
																	"type": "Expression"
																},
																"fileName": {
																	"value": "@variables('fileName')",
																	"type": "Expression"
																},
																"outputPath": {
																	"value": "@variables('outputPath')",
																	"type": "Expression"
																},
																"fileId": {
																	"value": "@variables('fileId')",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "insert review ExceptionError",
														"type": "Script",
														"dependsOn": [
															{
																"activity": "Execute create file output",
																"dependencyConditions": [
																	"Failed"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"linkedServiceName": {
															"referenceName": "AzureSqlDatabase1",
															"type": "LinkedServiceReference"
														},
														"typeProperties": {
															"scripts": [
																{
																	"type": "Query",
																	"text": {
																		"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_RESPONSE_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tRES_TYPE,\n\tSTATUS,\n\tDESCRIPTION) OUTPUT INSERTED.RES_ID VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''RESPONSE_FILE'',\n\t''E'',''',string(activity('Execute create file output').Error),''');')",
																		"type": "Expression"
																	}
																}
															]
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "If fileNameArchive Have value",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If Some val is Null",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(variables('fileNameArchive'),string(null)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set switchCaseVal_copy1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "switchCaseValue",
													"value": "createFileAndNotCreateFileArchive"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set switchCaseVal",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "switchCaseValue",
													"value": "createFileAndFileArchive"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"fileErrorList": {
						"type": "array"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"SCHEMA": {
						"type": "string"
					}
				},
				"variables": {
					"resId": {
						"type": "String"
					},
					"fileName": {
						"type": "String"
					},
					"fileId": {
						"type": "String"
					},
					"outputPath": {
						"type": "String"
					},
					"errorMessage": {
						"type": "String"
					},
					"fileType": {
						"type": "String"
					},
					"fileNameArchive": {
						"type": "String"
					},
					"switchCaseValue": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CC_CreateFileOutputAndArchive')]",
				"[concat(variables('factoryId'), '/pipelines/CC_CreateFileOutputNotArchive')]"
			]
		}
	]
}