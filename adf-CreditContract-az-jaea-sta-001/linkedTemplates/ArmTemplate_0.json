{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-CreditContract-az-jaea-sta-001"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureSqlBillingDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlBillingDatabase'"
		},
		"LocalFileServer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LocalFileServer'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvccmaksazjaeasta001.vault.azure.net/"
		},
		"LocalFileServer_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\credit-control"
		},
		"LocalFileServer_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "iradmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostIntegration')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-Hub-dev')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "PAR_ROW_ID",
						"type": "varchar"
					},
					{
						"name": "LOV_TYPE",
						"type": "varchar"
					},
					{
						"name": "LOV_NAME",
						"type": "varchar"
					},
					{
						"name": "DISPLAY_VAL",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL1",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL2",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL3",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL4",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL5",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL6",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL7",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL8",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL9",
						"type": "varchar"
					},
					{
						"name": "LOV_VAL10",
						"type": "varchar"
					},
					{
						"name": "TEXT_DESC",
						"type": "varchar"
					},
					{
						"name": "ORDER_BY",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "GROUP_TYPE",
						"type": "varchar"
					},
					{
						"name": "ACTIVE_FLG",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "CC_CFG_LOV"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableCurrent')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "PAR_ROW_ID",
						"type": "varchar"
					},
					{
						"name": "REQUEST_DETAIL_ID",
						"type": "varchar"
					},
					{
						"name": "LOV_CAT",
						"type": "varchar"
					},
					{
						"name": "LOV_SUBCAT",
						"type": "varchar"
					},
					{
						"name": "LOV_CUST_GROUP",
						"type": "varchar"
					},
					{
						"name": "MODULE_NAME",
						"type": "varchar"
					},
					{
						"name": "LOV_TYPE",
						"type": "varchar"
					},
					{
						"name": "LOV_NAME",
						"type": "nvarchar"
					},
					{
						"name": "VAL1",
						"type": "nvarchar"
					},
					{
						"name": "VAL2",
						"type": "nvarchar"
					},
					{
						"name": "VAL3",
						"type": "nvarchar"
					},
					{
						"name": "VAL4",
						"type": "nvarchar"
					},
					{
						"name": "VAL5",
						"type": "nvarchar"
					},
					{
						"name": "VAL6",
						"type": "nvarchar"
					},
					{
						"name": "VAL7",
						"type": "nvarchar"
					},
					{
						"name": "VAL8",
						"type": "nvarchar"
					},
					{
						"name": "VAL9",
						"type": "nvarchar"
					},
					{
						"name": "VAL10",
						"type": "nvarchar"
					},
					{
						"name": "VAL11",
						"type": "nvarchar"
					},
					{
						"name": "VAL12",
						"type": "nvarchar"
					},
					{
						"name": "VAL13",
						"type": "nvarchar"
					},
					{
						"name": "VAL14",
						"type": "nvarchar"
					},
					{
						"name": "VAL15",
						"type": "nvarchar"
					},
					{
						"name": "VAL16",
						"type": "nvarchar"
					},
					{
						"name": "VAL17",
						"type": "nvarchar"
					},
					{
						"name": "VAL18",
						"type": "nvarchar"
					},
					{
						"name": "VAL19",
						"type": "nvarchar"
					},
					{
						"name": "VAL20",
						"type": "nvarchar"
					},
					{
						"name": "VAL21",
						"type": "nvarchar"
					},
					{
						"name": "VAL22",
						"type": "nvarchar"
					},
					{
						"name": "VAL23",
						"type": "nvarchar"
					},
					{
						"name": "VAL24",
						"type": "nvarchar"
					},
					{
						"name": "VAL25",
						"type": "nvarchar"
					},
					{
						"name": "VAL26",
						"type": "nvarchar"
					},
					{
						"name": "VAL27",
						"type": "nvarchar"
					},
					{
						"name": "VAL28",
						"type": "nvarchar"
					},
					{
						"name": "VAL29",
						"type": "nvarchar"
					},
					{
						"name": "VAL30",
						"type": "nvarchar"
					},
					{
						"name": "TEXT_DESC",
						"type": "nvarchar"
					},
					{
						"name": "ORDER_BY",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "EFFECTIVE_UNTIL_DT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ACTIVE_FLG",
						"type": "char"
					},
					{
						"name": "IMPORT_FLG",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DATA_FAC",
					"table": "CC_CURRENT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableFileTempDetail1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FILE_DTL_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "FILE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FILE_LINE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DEV",
					"table": "CC_TEMP_FILE_DETAIL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCResReviewTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BA_NO",
						"type": "varchar"
					},
					{
						"name": "FLAG",
						"type": "varchar"
					},
					{
						"name": "DATE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "cc_res_review"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCTableFileTempDetail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FILE_DTL_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "FILE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FILE_LINE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DEV",
					"table": "CC_TEMP_FILE_DETAIL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCTableFileTempDetailSchemaUAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FILE_DTL_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "FILE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "FILE_LINE",
						"type": "varchar"
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_UAT",
					"table": "CC_TEMP_FILE_DETAIL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_DatasetChangeCatSubcatHist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CHANGE_HIST_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "CHANGE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "BILLING_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "BILLING_ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "NEW_ACCNT_SUB_CAT",
						"type": "varchar"
					},
					{
						"name": "OLD_ACCNT_SUB_CAT",
						"type": "varchar"
					},
					{
						"name": "PROFILE_CHANGE_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PROFILE_CHANGE_ROWID",
						"type": "varchar"
					},
					{
						"name": "MAIL_PERIOD",
						"type": "decimal",
						"precision": 2,
						"scale": 0
					},
					{
						"name": "SET_CL_STATUS",
						"type": "varchar"
					},
					{
						"name": "PREV_SET_CL_STATUS",
						"type": "varchar"
					},
					{
						"name": "AVAILABLE_CL",
						"type": "decimal",
						"precision": 22,
						"scale": 2
					},
					{
						"name": "CHANGE_REASON",
						"type": "varchar"
					},
					{
						"name": "REF_REQ_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					},
					{
						"name": "REGISTER_DT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NEW_ACCNT_CAT",
						"type": "varchar"
					},
					{
						"name": "ACCNT_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DEV",
					"table": "CC_CHANGE_CAT_SUBCAT_HIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_DatasetChangeCatSubcatHistUAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CHANGE_HIST_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "CHANGE_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "BILLING_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "BILLING_ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "REGISTER_DT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NEW_ACCNT_CAT",
						"type": "varchar"
					},
					{
						"name": "NEW_ACCNT_SUB_CAT",
						"type": "varchar"
					},
					{
						"name": "OLD_ACCNT_SUB_CAT",
						"type": "varchar"
					},
					{
						"name": "PROFILE_CHANGE_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PROFILE_CHANGE_ROWID",
						"type": "varchar"
					},
					{
						"name": "MAIL_PERIOD",
						"type": "decimal",
						"precision": 2,
						"scale": 0
					},
					{
						"name": "SET_CL_STATUS",
						"type": "varchar"
					},
					{
						"name": "PREV_SET_CL_STATUS",
						"type": "varchar"
					},
					{
						"name": "AVAILABLE_CL",
						"type": "decimal",
						"precision": 22,
						"scale": 2
					},
					{
						"name": "CHANGE_REASON",
						"type": "varchar"
					},
					{
						"name": "REF_REQ_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "REMARK",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_UAT",
					"table": "CC_CHANGE_CAT_SUBCAT_HIST"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_DatasetTableBillingReviewSchemaDataFac')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATA_HIST_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "DATA_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "STATUS",
						"type": "char"
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ERROR_MSG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT_DATA_FAC",
					"table": "CC_BILLING_REVIEW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_TableDynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "REF_ROW_ID",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "BILLING_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "CL_LEVEL",
						"type": "varchar"
					},
					{
						"name": "SCORE_RANGE",
						"type": "varchar"
					},
					{
						"name": "CL_TYPE",
						"type": "varchar"
					},
					{
						"name": "CL_CHANGE_REASON",
						"type": "varchar"
					},
					{
						"name": "OUTCOME_CD",
						"type": "varchar"
					},
					{
						"name": "OUTCOME_REASON",
						"type": "varchar"
					},
					{
						"name": "CREDIT_LIMIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "PERM_CREDIT_LIMIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "TEMP_CREDIT_LIMIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "PREV_CREDIT_LIMIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "PREV_SCORE_RANGE",
						"type": "varchar"
					},
					{
						"name": "ACTUAL",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "ACTUAL_PERM",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "BILLING_CREDIT_LIMIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "BILLING_THRESHOLD_SET_ID",
						"type": "decimal",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FBB_FLAG",
						"type": "char"
					},
					{
						"name": "LAST_REVIEW_DAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MIN_REVIEW",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "AVAILABLE_CREDIT",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "PAYMENT_FLG",
						"type": "char"
					},
					{
						"name": "BA_REGISTER_DT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestCCBilling')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ROW_ID",
						"type": "varchar"
					},
					{
						"name": "CREATED",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "CREATED_BY",
						"type": "varchar"
					},
					{
						"name": "LAST_UPD",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "LAST_UPD_BY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_NO",
						"type": "varchar"
					},
					{
						"name": "ACCNT_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ACCNT_SUB_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "BILL_NAME",
						"type": "varchar"
					},
					{
						"name": "BILL_CYCLE",
						"type": "varchar"
					},
					{
						"name": "INVOICING_COMPANY",
						"type": "varchar"
					},
					{
						"name": "PAYMENT_METHOD",
						"type": "varchar"
					},
					{
						"name": "MASTER_ACCNT_ID",
						"type": "varchar"
					},
					{
						"name": "STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "BILLING_STATUS_CD",
						"type": "varchar"
					},
					{
						"name": "REGISTER_DT",
						"type": "datetime2",
						"scale": 0
					},
					{
						"name": "ARPU",
						"type": "decimal",
						"precision": 22,
						"scale": 7
					},
					{
						"name": "CREDIT_GRADE",
						"type": "decimal",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "DEBT_NEGO_FLG",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CREDIT",
					"table": "TEST_CC_BILLING"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvs-ccmcontainerkey-az-jaea-sta-001"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "kvs-ccmcontainerkey-az-jaea-sta-001"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlBillingDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlBillingDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR-Hub-dev",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-Hub-dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalFileServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('LocalFileServer_properties_typeProperties_host')]",
					"userId": "[parameters('LocalFileServer_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LocalFileServer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-Hub-dev",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-Hub-dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CC_InsertOrUpdateScoreValueByClLevelCase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert or Update ScoreValue",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Set insertOrUpdateCase",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('insertOrUpdateCase')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "CA",
									"activities": [
										{
											"name": "Script Insert Table CC_DATA_FACTORY_HIST_copy1",
											"type": "Script",
											"dependsOn": [
												{
													"activity": "Script Insert or Update Table CC_SCORE_VALUE",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"linkedServiceName": {
												"referenceName": "AzureSqlDatabase1",
												"type": "LinkedServiceReference"
											},
											"typeProperties": {
												"scripts": [
													{
														"type": "Query",
														"text": {
															"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',pipeline().parameters.line,''',\n\t''',substring(replace(activity('Script Insert or Update Table CC_SCORE_VALUE').Error.Message,'''','\"'),0,499),''',\n\t''E''\n\t)')",
															"type": "Expression"
														}
													}
												]
											}
										},
										{
											"name": "Get Exiting Value by accntId",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('SELECT ''Y'' from ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE WHERE ACCNT_ID = ''',split(pipeline().parameters.line,'|')[6],'''')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "AzureSqlTableCurrent",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "Script Insert or Update Table CC_SCORE_VALUE",
											"type": "Script",
											"dependsOn": [
												{
													"activity": "Set Insert Ca Case",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "Set Update Ca Case",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "Set Existing Ca Case",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"linkedServiceName": {
												"referenceName": "AzureSqlDatabase1",
												"type": "LinkedServiceReference"
											},
											"typeProperties": {
												"scripts": [
													{
														"type": "Query",
														"text": {
															"value": "@if(variables('existing'),variables('scriptInsert'),variables('scriptUpdate'))",
															"type": "Expression"
														}
													}
												]
											}
										},
										{
											"name": "Set Existing Ca Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value by accntId",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "existing",
												"value": {
													"value": "@not(contains(string(activity('Get Exiting Value by accntId').output),'firstRow'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Update Ca Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value by accntId",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "scriptUpdate",
												"value": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE\n    SET\n\tCREATED =',if(empty(split(pipeline().parameters.line,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(pipeline().parameters.line,'|')[2],'''')),',\n\tCREATED_BY =',if(empty(split(pipeline().parameters.line,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(pipeline().parameters.line,'|')[3],'''')),',\n\tLAST_UPD =',if(empty(split(pipeline().parameters.line,'|')[4]),'NULL',concat('''',split(pipeline().parameters.line,'|')[4],'''')),',\n\tLAST_UPD_BY =',if(empty(split(pipeline().parameters.line,'|')[5]),'NULL',concat('''',split(pipeline().parameters.line,'|')[5],'''')),',\n\tACCNT_ID =',if(empty(split(pipeline().parameters.line,'|')[6]),'NULL',concat('''',split(pipeline().parameters.line,'|')[6],'''')),',\n\tBILLING_ACCNT_ID =',if(empty(split(pipeline().parameters.line,'|')[7]),'NULL',concat('''',split(pipeline().parameters.line,'|')[7],'''')),',\n\tACCNT_NO =',if(empty(split(pipeline().parameters.line,'|')[8]),'NULL',concat('''',split(pipeline().parameters.line,'|')[8],'''')),',\n\tCL_LEVEL =',if(empty(split(pipeline().parameters.line,'|')[9]),'NULL',concat('''',split(pipeline().parameters.line,'|')[9],'''')),',\n\tSCORE_RANGE =',if(empty(split(pipeline().parameters.line,'|')[10]),'NULL',concat('''',split(pipeline().parameters.line,'|')[10],'''')),',\n\tCL_TYPE =',if(empty(split(pipeline().parameters.line,'|')[11]),'NULL',concat('''',split(pipeline().parameters.line,'|')[11],'''')),',\n\tCL_CHANGE_REASON =',if(empty(split(pipeline().parameters.line,'|')[12]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',\n\tOUTCOME_CD =',if(empty(split(pipeline().parameters.line,'|')[13]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',\n\tOUTCOME_REASON =',if(empty(split(pipeline().parameters.line,'|')[14]),'NULL',concat('''',split(pipeline().parameters.line,'|')[14],'''')),',\n\tCREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[15]),'NULL',concat('''',split(pipeline().parameters.line,'|')[15],'''')),',\n\tPERM_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[16]),'NULL',concat('''',split(pipeline().parameters.line,'|')[16],'''')),',\n\tTEMP_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[17]),'NULL',concat('''',split(pipeline().parameters.line,'|')[17],'''')),',\n\tPREV_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[18]),'NULL',concat('''',split(pipeline().parameters.line,'|')[18],'''')),',\n\tPREV_SCORE_RANGE =',if(empty(split(pipeline().parameters.line,'|')[19]),'NULL',concat('''',split(pipeline().parameters.line,'|')[19],'''')),',\n\tACTUAL =',if(empty(split(pipeline().parameters.line,'|')[20]),'NULL',concat('''',split(pipeline().parameters.line,'|')[20],'''')),',\n\tACTUAL_PERM =',if(empty(split(pipeline().parameters.line,'|')[21]),'NULL',concat('''',split(pipeline().parameters.line,'|')[21],'''')),',\n\tBILLING_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[22]),'NULL',concat('''',split(pipeline().parameters.line,'|')[22],'''')),',\n\tBILLING_THRESHOLD_SET_ID =',if(empty(split(pipeline().parameters.line,'|')[23]),'NULL',concat('''',split(pipeline().parameters.line,'|')[23],'''')),',\n\tFBB_FLAG =',if(empty(split(pipeline().parameters.line,'|')[24]),'NULL',concat('''',split(pipeline().parameters.line,'|')[24],'''')),',\n\tLAST_REVIEW_DAT =',if(empty(split(pipeline().parameters.line,'|')[25]),'NULL',concat('''',split(pipeline().parameters.line,'|')[25],'''')),',\n\tMIN_REVIEW =',if(empty(split(pipeline().parameters.line,'|')[26]),'NULL',concat('''',split(pipeline().parameters.line,'|')[26],'''')),',\n\tAVAILABLE_CREDIT =',if(empty(split(pipeline().parameters.line,'|')[27]),'NULL',concat('''',split(pipeline().parameters.line,'|')[27],'''')),',\n\tPAYMENT_FLG =',if(empty(split(pipeline().parameters.line,'|')[28]),'NULL',concat('''',split(pipeline().parameters.line,'|')[28],'''')),',\n\tBA_REGISTER_DT =',if(empty(split(pipeline().parameters.line,'|')[29]),'NULL',concat('''',split(pipeline().parameters.line,'|')[29],'''')),'\n\tWHERE ACCNT_ID = ''',split(pipeline().parameters.line,'|')[6],''';')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Insert Ca Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value by accntId",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "scriptInsert",
												"value": {
													"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE \n    (REF_ROW_ID,\n\tCREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tACCNT_ID,\n\tBILLING_ACCNT_ID,\n\tACCNT_NO,\n\tCL_LEVEL,\n\tSCORE_RANGE,\n\tCL_TYPE,\n\tCL_CHANGE_REASON,\n\tOUTCOME_CD,\n\tOUTCOME_REASON,\n\tCREDIT_LIMIT,\n\tPERM_CREDIT_LIMIT,\n\tTEMP_CREDIT_LIMIT,\n\tPREV_CREDIT_LIMIT,\n\tPREV_SCORE_RANGE,\n\tACTUAL,\n\tACTUAL_PERM,\n\tBILLING_CREDIT_LIMIT,\n\tBILLING_THRESHOLD_SET_ID,\n\tFBB_FLAG,\n\tLAST_REVIEW_DAT,\n\tMIN_REVIEW,\n\tAVAILABLE_CREDIT,\n\tPAYMENT_FLG,\n\tBA_REGISTER_DT) VALUES ('\n    ,if(empty(split(pipeline().parameters.line,'|')[1]),'NULL',concat('''',split(pipeline().parameters.line,'|')[1],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(pipeline().parameters.line,'|')[2],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(pipeline().parameters.line,'|')[3],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[4]),'NULL',concat('''',split(pipeline().parameters.line,'|')[4],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[5]),'NULL',concat('''',split(pipeline().parameters.line,'|')[5],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[6]),'NULL',concat('''',split(pipeline().parameters.line,'|')[6],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[7]),'NULL',concat('''',split(pipeline().parameters.line,'|')[7],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[8]),'NULL',concat('''',split(pipeline().parameters.line,'|')[8],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[9]),'NULL',concat('''',split(pipeline().parameters.line,'|')[9],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[10]),'NULL',concat('''',split(pipeline().parameters.line,'|')[10],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[11]),'NULL',concat('''',split(pipeline().parameters.line,'|')[11],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[12]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[13]),'NULL',concat('''',split(pipeline().parameters.line,'|')[13],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[14]),'NULL',concat('''',split(pipeline().parameters.line,'|')[14],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[15]),'NULL',concat('''',split(pipeline().parameters.line,'|')[15],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[16]),'NULL',concat('''',split(pipeline().parameters.line,'|')[16],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[17]),'NULL',concat('''',split(pipeline().parameters.line,'|')[17],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[18]),'NULL',concat('''',split(pipeline().parameters.line,'|')[18],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[19]),'NULL',concat('''',split(pipeline().parameters.line,'|')[19],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[20]),'NULL',concat('''',split(pipeline().parameters.line,'|')[20],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[21]),'NULL',concat('''',split(pipeline().parameters.line,'|')[21],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[22]),'NULL',concat('''',split(pipeline().parameters.line,'|')[22],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[23]),'NULL',concat('''',split(pipeline().parameters.line,'|')[23],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[24]),'NULL',concat('''',split(pipeline().parameters.line,'|')[24],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[25]),'NULL',concat('''',split(pipeline().parameters.line,'|')[25],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[26]),'NULL',concat('''',split(pipeline().parameters.line,'|')[26],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[27]),'NULL',concat('''',split(pipeline().parameters.line,'|')[27],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[28]),'NULL',concat('''',split(pipeline().parameters.line,'|')[28],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[29]),'NULL',concat('''',split(pipeline().parameters.line,'|')[29],'''')),');')\n",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "BA",
									"activities": [
										{
											"name": "Script Insert Table CC_DATA_FACTORY_HIST",
											"type": "Script",
											"dependsOn": [
												{
													"activity": "Script Insert or Update Table CC_SCORE_VALUE_copy1",
													"dependencyConditions": [
														"Failed"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"linkedServiceName": {
												"referenceName": "AzureSqlDatabase1",
												"type": "LinkedServiceReference"
											},
											"typeProperties": {
												"scripts": [
													{
														"type": "Query",
														"text": {
															"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',pipeline().parameters.line,''',\n\t''',substring(replace(activity('Script Insert or Update Table CC_SCORE_VALUE_copy1').Error.Message,'''','\"'),0,499),''',\n\t''E''\n\t)')",
															"type": "Expression"
														}
													}
												]
											}
										},
										{
											"name": "Get Exiting Value",
											"type": "Lookup",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"sqlReaderQuery": {
														"value": "@concat('SELECT ''Y'' from ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE WHERE ACCNT_ID = ''',split(pipeline().parameters.line,'|')[6],''' AND BILLING_ACCNT_ID = ''',split(pipeline().parameters.line,'|')[7],'''')",
														"type": "Expression"
													},
													"queryTimeout": "02:00:00",
													"partitionOption": "None"
												},
												"dataset": {
													"referenceName": "AzureSqlTableCurrent",
													"type": "DatasetReference",
													"parameters": {}
												}
											}
										},
										{
											"name": "Script Insert or Update Table CC_SCORE_VALUE_copy1",
											"type": "Script",
											"dependsOn": [
												{
													"activity": "Set Existing Ba Case",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "Set Update Ba Case",
													"dependencyConditions": [
														"Succeeded"
													]
												},
												{
													"activity": "Set Insert Ba Case",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"linkedServiceName": {
												"referenceName": "AzureSqlDatabase1",
												"type": "LinkedServiceReference"
											},
											"typeProperties": {
												"scripts": [
													{
														"type": "Query",
														"text": {
															"value": "@if(variables('existing'),variables('scriptInsert'),variables('scriptUpdate'))",
															"type": "Expression"
														}
													}
												]
											}
										},
										{
											"name": "Set Existing Ba Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "existing",
												"value": {
													"value": "@not(contains(string(activity('Get Exiting Value').output),'firstRow'))",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Update Ba Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "scriptUpdate",
												"value": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE\n    SET\n\tCREATED =',if(empty(split(pipeline().parameters.line,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(pipeline().parameters.line,'|')[2],'''')),',\n\tCREATED_BY =',if(empty(split(pipeline().parameters.line,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(pipeline().parameters.line,'|')[3],'''')),',\n\tLAST_UPD =',if(empty(split(pipeline().parameters.line,'|')[4]),'NULL',concat('''',split(pipeline().parameters.line,'|')[4],'''')),',\n\tLAST_UPD_BY =',if(empty(split(pipeline().parameters.line,'|')[5]),'NULL',concat('''',split(pipeline().parameters.line,'|')[5],'''')),',\n\tACCNT_ID =',if(empty(split(pipeline().parameters.line,'|')[6]),'NULL',concat('''',split(pipeline().parameters.line,'|')[6],'''')),',\n\tBILLING_ACCNT_ID =',if(empty(split(pipeline().parameters.line,'|')[7]),'NULL',concat('''',split(pipeline().parameters.line,'|')[7],'''')),',\n\tACCNT_NO =',if(empty(split(pipeline().parameters.line,'|')[8]),'NULL',concat('''',split(pipeline().parameters.line,'|')[8],'''')),',\n\tCL_LEVEL =',if(empty(split(pipeline().parameters.line,'|')[9]),'NULL',concat('''',split(pipeline().parameters.line,'|')[9],'''')),',\n\tSCORE_RANGE =',if(empty(split(pipeline().parameters.line,'|')[10]),'NULL',concat('''',split(pipeline().parameters.line,'|')[10],'''')),',\n\tCL_TYPE =',if(empty(split(pipeline().parameters.line,'|')[11]),'NULL',concat('''',split(pipeline().parameters.line,'|')[11],'''')),',\n\tCL_CHANGE_REASON =',if(empty(split(pipeline().parameters.line,'|')[12]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',\n\tOUTCOME_CD =',if(empty(split(pipeline().parameters.line,'|')[13]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',\n\tOUTCOME_REASON =',if(empty(split(pipeline().parameters.line,'|')[14]),'NULL',concat('''',split(pipeline().parameters.line,'|')[14],'''')),',\n\tCREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[15]),'NULL',concat('''',split(pipeline().parameters.line,'|')[15],'''')),',\n\tPERM_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[16]),'NULL',concat('''',split(pipeline().parameters.line,'|')[16],'''')),',\n\tTEMP_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[17]),'NULL',concat('''',split(pipeline().parameters.line,'|')[17],'''')),',\n\tPREV_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[18]),'NULL',concat('''',split(pipeline().parameters.line,'|')[18],'''')),',\n\tPREV_SCORE_RANGE =',if(empty(split(pipeline().parameters.line,'|')[19]),'NULL',concat('''',split(pipeline().parameters.line,'|')[19],'''')),',\n\tACTUAL =',if(empty(split(pipeline().parameters.line,'|')[20]),'NULL',concat('''',split(pipeline().parameters.line,'|')[20],'''')),',\n\tACTUAL_PERM =',if(empty(split(pipeline().parameters.line,'|')[21]),'NULL',concat('''',split(pipeline().parameters.line,'|')[21],'''')),',\n\tBILLING_CREDIT_LIMIT =',if(empty(split(pipeline().parameters.line,'|')[22]),'NULL',concat('''',split(pipeline().parameters.line,'|')[22],'''')),',\n\tBILLING_THRESHOLD_SET_ID =',if(empty(split(pipeline().parameters.line,'|')[23]),'NULL',concat('''',split(pipeline().parameters.line,'|')[23],'''')),',\n\tFBB_FLAG =',if(empty(split(pipeline().parameters.line,'|')[24]),'NULL',concat('''',split(pipeline().parameters.line,'|')[24],'''')),',\n\tLAST_REVIEW_DAT =',if(empty(split(pipeline().parameters.line,'|')[25]),'NULL',concat('''',split(pipeline().parameters.line,'|')[25],'''')),',\n\tMIN_REVIEW =',if(empty(split(pipeline().parameters.line,'|')[26]),'NULL',concat('''',split(pipeline().parameters.line,'|')[26],'''')),',\n\tAVAILABLE_CREDIT =',if(empty(split(pipeline().parameters.line,'|')[27]),'NULL',concat('''',split(pipeline().parameters.line,'|')[27],'''')),',\n\tPAYMENT_FLG =',if(empty(split(pipeline().parameters.line,'|')[28]),'NULL',concat('''',split(pipeline().parameters.line,'|')[28],'''')),',\n\tBA_REGISTER_DT =',if(empty(split(pipeline().parameters.line,'|')[29]),'NULL',concat('''',split(pipeline().parameters.line,'|')[29],'''')),'\n\tWHERE ACCNT_ID = ''',split(pipeline().parameters.line,'|')[6],''' AND BILLING_ACCNT_ID = ''',split(pipeline().parameters.line,'|')[7],''';')",
													"type": "Expression"
												}
											}
										},
										{
											"name": "Set Insert Ba Case",
											"type": "SetVariable",
											"dependsOn": [
												{
													"activity": "Get Exiting Value",
													"dependencyConditions": [
														"Succeeded"
													]
												}
											],
											"userProperties": [],
											"typeProperties": {
												"variableName": "scriptInsert",
												"value": {
													"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_SCORE_VALUE \n    (REF_ROW_ID,\n\tCREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tACCNT_ID,\n\tBILLING_ACCNT_ID,\n\tACCNT_NO,\n\tCL_LEVEL,\n\tSCORE_RANGE,\n\tCL_TYPE,\n\tCL_CHANGE_REASON,\n\tOUTCOME_CD,\n\tOUTCOME_REASON,\n\tCREDIT_LIMIT,\n\tPERM_CREDIT_LIMIT,\n\tTEMP_CREDIT_LIMIT,\n\tPREV_CREDIT_LIMIT,\n\tPREV_SCORE_RANGE,\n\tACTUAL,\n\tACTUAL_PERM,\n\tBILLING_CREDIT_LIMIT,\n\tBILLING_THRESHOLD_SET_ID,\n\tFBB_FLAG,\n\tLAST_REVIEW_DAT,\n\tMIN_REVIEW,\n\tAVAILABLE_CREDIT,\n\tPAYMENT_FLG,\n\tBA_REGISTER_DT) VALUES ('\n    ,if(empty(split(pipeline().parameters.line,'|')[1]),'NULL',concat('''',split(pipeline().parameters.line,'|')[1],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(pipeline().parameters.line,'|')[2],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(pipeline().parameters.line,'|')[3],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[4]),'NULL',concat('''',split(pipeline().parameters.line,'|')[4],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[5]),'NULL',concat('''',split(pipeline().parameters.line,'|')[5],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[6]),'NULL',concat('''',split(pipeline().parameters.line,'|')[6],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[7]),'NULL',concat('''',split(pipeline().parameters.line,'|')[7],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[8]),'NULL',concat('''',split(pipeline().parameters.line,'|')[8],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[9]),'NULL',concat('''',split(pipeline().parameters.line,'|')[9],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[10]),'NULL',concat('''',split(pipeline().parameters.line,'|')[10],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[11]),'NULL',concat('''',split(pipeline().parameters.line,'|')[11],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[12]),'NULL',concat('''',split(pipeline().parameters.line,'|')[12],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[13]),'NULL',concat('''',split(pipeline().parameters.line,'|')[13],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[14]),'NULL',concat('''',split(pipeline().parameters.line,'|')[14],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[15]),'NULL',concat('''',split(pipeline().parameters.line,'|')[15],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[16]),'NULL',concat('''',split(pipeline().parameters.line,'|')[16],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[17]),'NULL',concat('''',split(pipeline().parameters.line,'|')[17],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[18]),'NULL',concat('''',split(pipeline().parameters.line,'|')[18],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[19]),'NULL',concat('''',split(pipeline().parameters.line,'|')[19],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[20]),'NULL',concat('''',split(pipeline().parameters.line,'|')[20],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[21]),'NULL',concat('''',split(pipeline().parameters.line,'|')[21],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[22]),'NULL',concat('''',split(pipeline().parameters.line,'|')[22],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[23]),'NULL',concat('''',split(pipeline().parameters.line,'|')[23],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[24]),'NULL',concat('''',split(pipeline().parameters.line,'|')[24],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[25]),'NULL',concat('''',split(pipeline().parameters.line,'|')[25],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[26]),'NULL',concat('''',split(pipeline().parameters.line,'|')[26],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[27]),'NULL',concat('''',split(pipeline().parameters.line,'|')[27],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[28]),'NULL',concat('''',split(pipeline().parameters.line,'|')[28],'''')),',',\nif(empty(split(pipeline().parameters.line,'|')[29]),'NULL',concat('''',split(pipeline().parameters.line,'|')[29],'''')),');')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"value": "NotInCaAndBa",
									"activities": [
										{
											"name": "Script Insert Table CC_DATA_FACTORY_HIST_copy2",
											"type": "Script",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"linkedServiceName": {
												"referenceName": "AzureSqlDatabase1",
												"type": "LinkedServiceReference"
											},
											"typeProperties": {
												"scripts": [
													{
														"type": "Query",
														"text": {
															"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',pipeline().parameters.line,''',\n\t''',if(and(not(equals(trim(coalesce(split(pipeline().parameters.line,'|')[9],'')),'CA')),not(equals(trim(coalesce(split(pipeline().parameters.line,'|')[9],'')),'BA'))),'clLevel not match Ca or Ba',\n\t\tif(and(equals(trim(coalesce(split(pipeline().parameters.line,'|')[9],'')),'CA'),equals(trim(coalesce(split(pipeline().parameters.line,'|')[6],'')),'')),'accntId data not found',\n\t\tif(and(equals(trim(coalesce(split(pipeline().parameters.line,'|')[9],'')),'BA'),equals(trim(coalesce(split(pipeline().parameters.line,'|')[6],'')),'')),'accntId data not found',\n\t\t'billingAccntId data not found'))),''',\n\t''E''\n\t)')",
															"type": "Expression"
														}
													}
												]
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set insertOrUpdateCase",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "insertOrUpdateCase",
							"value": {
								"value": "@if(and(not(equals(trim(coalesce(split(pipeline().parameters.line,'|')[6],'')),'')),equals(string(split(pipeline().parameters.line,'|')[9]),'CA')),'CA',\nif(and(and(not(equals(trim(coalesce(split(pipeline().parameters.line,'|')[6],'')),'')),not(equals(trim(coalesce(split(pipeline().parameters.line,'|')[7],'')),'')) ),equals(string(split(pipeline().parameters.line,'|')[9]),'BA')),'BA',\n'NotInCaAndBa'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"line": {
						"type": "string"
					},
					"SCHEMA": {
						"type": "string"
					},
					"CREDIT_USER": {
						"type": "string"
					},
					"dataId": {
						"type": "string"
					}
				},
				"variables": {
					"existing": {
						"type": "Boolean"
					},
					"scriptInsert": {
						"type": "String"
					},
					"scriptUpdate": {
						"type": "String"
					},
					"insertOrUpdateCase": {
						"type": "String"
					},
					"lineError": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableCurrent')]"
			]
		}
	]
}