{
	"name": "CC_ReviewTempfileProcessFileDat",
	"properties": {
		"activities": [
			{
				"name": "Copy data to CC_TEMP_FILE_DETAIL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set temp file dat Id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "STATUS",
								"value": "S"
							},
							{
								"name": "FILE_ID",
								"value": {
									"value": "@variables('tempFileDatId')",
									"type": "Expression"
								}
							},
							{
								"name": "CREATED_BY",
								"value": {
									"value": "@pipeline().parameters.CREDIT_USER",
									"type": "Expression"
								}
							},
							{
								"name": "LAST_UPD_BY",
								"value": {
									"value": "@pipeline().parameters.CREDIT_USER",
									"type": "Expression"
								}
							},
							{
								"name": "CREATED",
								"value": {
									"value": "@convertTimeZone(utcNow(),'UTC','SE Asia Standard Time')",
									"type": "Expression"
								}
							},
							{
								"name": "LAST_UPD",
								"value": {
									"value": "@convertTimeZone(utcNow(),'UTC','SE Asia Standard Time')",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": 1000,
						"writeBatchTimeout": "00:30:00",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CREATED",
									"type": "String"
								},
								"sink": {
									"name": "CREATED",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "CREATED_BY",
									"type": "String"
								},
								"sink": {
									"name": "CREATED_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LAST_UPD",
									"type": "String"
								},
								"sink": {
									"name": "LAST_UPD",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "LAST_UPD_BY",
									"type": "String"
								},
								"sink": {
									"name": "LAST_UPD_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 1
								},
								"sink": {
									"name": "FILE_LINE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FILE_ID",
									"type": "String"
								},
								"sink": {
									"name": "FILE_ID",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "STATUS",
									"type": "String"
								},
								"sink": {
									"name": "STATUS",
									"type": "String",
									"physicalType": "char"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": false,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CCTableFileTempDetailSchemaUAT",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Insert CC_TEMP_FILE_DAT",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set fileNameArchive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tFILE_TYPE,\n\tFILE_NAME,\n\tFILE_NAME_ARCHIVE,\n\tFILE_PROCESS_TIME,\n\tSTATUS) OUTPUT INSERTED.FILE_ID  \n\tVALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',pipeline().parameters.FILE_TYPE,''',\n\t''',pipeline().parameters.fileDatName,''',\n\t''',variables('fileNameArchive'),''',\n\t''',variables('fileProcessTime'),''',\n\t''O'');')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Set temp file dat Id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Insert CC_TEMP_FILE_DAT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tempFileDatId",
					"value": {
						"value": "@string(first(first(activity('Insert CC_TEMP_FILE_DAT').output.resultSets).rows).FILE_ID)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Move Data Dat Succes",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Clean Up File line Null",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE\n\t',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''S''',\n\t', DESCRIPTION = ''Insert data on file update ',pipeline().parameters.FILE_UPDATE_TYPE,' complete''',\n\t' WHERE FILE_ID =',variables('tempFileDatId'),';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Move Data Dat Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_TEMP_FILE_DETAIL",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE\n\t',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E''',\n\t''', DESCRIPTION = ''', substring(concat('Datafac Exception ',replace(string(activity('Copy data to CC_TEMP_FILE_DETAIL')),'''','''''')),0,499),'''',\n\t' WHERE FILE_ID =',variables('tempFileDatId'),';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Set fileProcessTime",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "update file dat onprocess",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileProcessTime",
					"value": {
						"value": "@formatDateTime(convertTimeZone(utcnow(),'UTC','North Asia Standard Time'),'yyyyMMddHHmmss')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set fileNameArchive",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set fileProcessTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileNameArchive",
					"value": {
						"value": "@concat(variables('fileDatNameNotExension'),'_',variables('fileProcessTime'),'.',variables('fileDatExension'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "update file dat onprocess",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set description on process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''P'',',\n\t' DESCRIPTION = ''',variables('descriptionOnprocess'),'''',\n\t' WHERE REVIEW_ID =',pipeline().parameters.reviewId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Lookup FIle Dat",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set fileDatExension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "update review End Process Success",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move Data Dat Succes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''S''',\n\t' WHERE REVIEW_ID =',pipeline().parameters.reviewId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "update review End Process Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move Data Dat Error",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''', substring(concat('Datafac Exception ',replace(string(activity('Copy data to CC_TEMP_FILE_DETAIL')),'''','''''')),0,499),'''',\n\t' WHERE REVIEW_ID =',pipeline().parameters.reviewId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Clean Up File line Null",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_TEMP_FILE_DETAIL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('DELETE FROM ',pipeline().parameters.SCHEMA,'.CC_TEMP_FILE_DETAIL '\n    ,'WHERE FILE_ID = ',variables('tempFileDatId'),' AND FILE_LINE IS NULL;')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Set fileDatNameNotExtension",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set fileSyncExension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileDatNameNotExension",
					"value": {
						"value": "@if(greater(length(split(pipeline().parameters.fileDatName,'.')),2),join(take(split(pipeline().parameters.fileDatName,'.'),sub(length(split(pipeline().parameters.fileDatName,'.')),1)),'.'),split(pipeline().parameters.fileDatName,'.')[0])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set fileDatExension",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set fileDatNameNotExtension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileDatExension",
					"value": {
						"value": "@split(pipeline().parameters.fileDatName,'.')[sub(length(split(pipeline().parameters.fileDatName,'.')),1)]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set fileSyncNameNotExtension",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileSyncNotExension",
					"value": {
						"value": "@if(greater(length(split(pipeline().parameters.fileSyncName,'.')),2),join(take(split(pipeline().parameters.fileSyncName,'.'),sub(length(split(pipeline().parameters.fileSyncName,'.')),1)),'.'),split(pipeline().parameters.fileSyncName,'.')[0])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set fileSyncExension",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set fileSyncNameNotExtension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileSyncExension",
					"value": {
						"value": "@split(pipeline().parameters.fileSyncName,'.')[sub(length(split(pipeline().parameters.fileSyncName,'.')),1)]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set description on process",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup FIle Dat",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "descriptionOnprocess",
					"value": {
						"value": "@concat('Process file name : ',pipeline().parameters.fileDatName,' total count ',string(length(activity('Lookup FIle Dat').output.value)),' record -> count process ',if(equals(pipeline().parameters.CREDIT_USER,'DATA_FAC_UPDATE_PAYMENT'),string(length(activity('Lookup FIle Dat').output.value)),string(sub(length(activity('Lookup FIle Dat').output.value),2))),' record.')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Move Path is Empty",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Move Data Dat Succes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(pipeline().parameters.moveInputPath)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Move FIle Sync",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CC_MoveFile",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"inDir": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"outDir": {
										"value": "@pipeline().parameters.moveInputPath",
										"type": "Expression"
									},
									"inName": {
										"value": "@pipeline().parameters.fileSyncName",
										"type": "Expression"
									},
									"outName": {
										"value": "@concat(variables('fileSyncNotExension'),'_',variables('fileProcessTime'),'.',variables('fileSyncExension'))",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Move FIle Dat",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CC_MoveFile",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"inDir": {
										"value": "@pipeline().parameters.inputPath",
										"type": "Expression"
									},
									"outDir": {
										"value": "@pipeline().parameters.moveInputPath",
										"type": "Expression"
									},
									"inName": {
										"value": "@pipeline().parameters.fileDatName",
										"type": "Expression"
									},
									"outName": {
										"value": "@variables('fileNameArchive')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "update review End Process Move file sync Error",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Move FIle Sync",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE REVIEW_ID =',pipeline().parameters.reviewId,';')",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "update review End Process Move file dat Error",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Move FIle Dat",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_REVIEW \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE REVIEW_ID =',pipeline().parameters.reviewId,';')",
											"type": "Expression"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"fileDatName": {
				"type": "string"
			},
			"SCHEMA": {
				"type": "string"
			},
			"FILE_TYPE": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"inputPath": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileSyncName": {
				"type": "string"
			},
			"reviewId": {
				"type": "string"
			},
			"FILE_UPDATE_TYPE": {
				"type": "string"
			}
		},
		"variables": {
			"fileProcessTime": {
				"type": "String"
			},
			"fileNameArchive": {
				"type": "String"
			},
			"tempFileDatId": {
				"type": "String"
			},
			"fileDatNameNotExension": {
				"type": "String"
			},
			"fileDatExension": {
				"type": "String"
			},
			"fileSyncNotExension": {
				"type": "String"
			},
			"fileSyncExension": {
				"type": "String"
			},
			"descriptionOnprocess": {
				"type": "String"
			}
		},
		"annotations": []
	}
}