{
	"name": "CC_DataFactoryInsertOrUpdateCreditAssignProcessDat",
	"properties": {
		"activities": [
			{
				"name": "Lookup File dat",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter Start With 02",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup File dat",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup File dat').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().Prop_0,'02')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach row",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter Start With 02",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter Start With 02').output.Value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "Get Exiting RefRowId",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT ''Y'' from ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN WHERE REF_ROW_ID = ''',split(item().Prop_0,'|')[1],'''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "AzureSqlTableCurrent",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Script Insert or Update Table CC_CREDIT_ASSIGN",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Get Exiting RefRowId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@if(not(contains(string(activity('Get Exiting RefRowId').output),'firstRow'))\n,concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN \n    (REF_ROW_ID,\n\tCREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tBILLING_ACCOUNT_NUM,\n\tLIMIT_MNY,\n\tGNV_LIMIT_MNY,\n\tTHRESHOLD_ID,\n\tREQUEST_ID,\n\tACTION_TYPE,\n\tACTION_DTM,\n\tREASON_CODE,\n\tREASON_SUBCODE,\n\tLAST_UPDATE_BY,\n\tLAST_UPDATE_DTM,\n\tASSIGN_NO,\n\tTEMP_EXPIRE_DAT,\n\tSEQ_NO,\n\tCREDIT_GRADE,\n\tARPU,\n\tMIN_REVIEW,\n\tSUM_MAIN,\n\tNEXT_BILL_DATE) VALUES ('\n    ,if(empty(split(item().Prop_0,'|')[1]),'NULL',concat('''',split(item().Prop_0,'|')[1],'''')),',',\nif(empty(split(item().Prop_0,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(item().Prop_0,'|')[2],'''')),',',\nif(empty(split(item().Prop_0,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(item().Prop_0,'|')[3],'''')),',',\nif(empty(split(item().Prop_0,'|')[4]),'NULL',concat('''',split(item().Prop_0,'|')[4],'''')),',',\nif(empty(split(item().Prop_0,'|')[5]),'NULL',concat('''',split(item().Prop_0,'|')[5],'''')),',',\nif(empty(split(item().Prop_0,'|')[6]),'NULL',concat('''',split(item().Prop_0,'|')[6],'''')),',',\nif(empty(split(item().Prop_0,'|')[7]),'NULL',concat('''',split(item().Prop_0,'|')[7],'''')),',',\nif(empty(split(item().Prop_0,'|')[8]),'NULL',concat('''',split(item().Prop_0,'|')[8],'''')),',',\nif(empty(split(item().Prop_0,'|')[9]),'NULL',concat('''',split(item().Prop_0,'|')[9],'''')),',',\nif(empty(split(item().Prop_0,'|')[10]),'NULL',concat('''',split(item().Prop_0,'|')[10],'''')),',',\nif(empty(split(item().Prop_0,'|')[11]),'NULL',concat('''',split(item().Prop_0,'|')[11],'''')),',',\nif(empty(split(item().Prop_0,'|')[12]),'NULL',concat('''',split(item().Prop_0,'|')[12],'''')),',',\nif(empty(split(item().Prop_0,'|')[13]),'NULL',concat('''',split(item().Prop_0,'|')[13],'''')),',',\nif(empty(split(item().Prop_0,'|')[14]),'NULL',concat('''',split(item().Prop_0,'|')[14],'''')),',',\nif(empty(split(item().Prop_0,'|')[15]),'NULL',concat('''',split(item().Prop_0,'|')[15],'''')),',',\nif(empty(split(item().Prop_0,'|')[16]),'NULL',concat('''',split(item().Prop_0,'|')[16],'''')),',',\nif(empty(split(item().Prop_0,'|')[17]),'NULL',concat('''',split(item().Prop_0,'|')[17],'''')),',',\nif(empty(split(item().Prop_0,'|')[18]),'NULL',concat('''',split(item().Prop_0,'|')[18],'''')),',',\nif(empty(split(item().Prop_0,'|')[19]),'NULL',concat('''',split(item().Prop_0,'|')[19],'''')),',',\nif(empty(split(item().Prop_0,'|')[20]),'NULL',concat('''',split(item().Prop_0,'|')[20],'''')),',',\nif(empty(split(item().Prop_0,'|')[21]),'NULL',concat('''',split(item().Prop_0,'|')[21],'''')),',',\nif(empty(split(item().Prop_0,'|')[22]),'NULL',concat('''',split(item().Prop_0,'|')[22],'''')),',',\nif(empty(split(item().Prop_0,'|')[23]),'NULL',concat('''',split(item().Prop_0,'|')[23],'''')),',',\nif(empty(split(item().Prop_0,'|')[25]),'NULL',concat('''',split(item().Prop_0,'|')[25],'''')),');')\n\n,concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN\n    SET\n\tCREATED =',if(empty(split(item().Prop_0,'|')[2]),concat('CONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')'),concat('''',split(item().Prop_0,'|')[2],'''')),',\n\tCREATED_BY =',if(empty(split(item().Prop_0,'|')[3]),concat('''',pipeline().parameters.CREDIT_USER,''''),concat('''',split(item().Prop_0,'|')[3],'''')),',\n\tLAST_UPD =',if(empty(split(item().Prop_0,'|')[4]),'NULL',concat('''',split(item().Prop_0,'|')[4],'''')),',\n\tLAST_UPD_BY =',if(empty(split(item().Prop_0,'|')[5]),'NULL',concat('''',split(item().Prop_0,'|')[5],'''')),',\n\tBILLING_ACCOUNT_NUM =',if(empty(split(item().Prop_0,'|')[6]),'NULL',concat('''',split(item().Prop_0,'|')[6],'''')),',\n\tLIMIT_MNY =',if(empty(split(item().Prop_0,'|')[7]),'NULL',concat('''',split(item().Prop_0,'|')[7],'''')),',\n\tGNV_LIMIT_MNY =',if(empty(split(item().Prop_0,'|')[8]),'NULL',concat('''',split(item().Prop_0,'|')[8],'''')),',\n\tTHRESHOLD_ID =',if(empty(split(item().Prop_0,'|')[9]),'NULL',concat('''',split(item().Prop_0,'|')[9],'''')),',\n\tREQUEST_ID =',if(empty(split(item().Prop_0,'|')[10]),'NULL',concat('''',split(item().Prop_0,'|')[10],'''')),',\n\tACTION_TYPE =',if(empty(split(item().Prop_0,'|')[11]),'NULL',concat('''',split(item().Prop_0,'|')[11],'''')),',\n\tACTION_DTM =',if(empty(split(item().Prop_0,'|')[12]),'NULL',concat('''',split(item().Prop_0,'|')[12],'''')),',\n\tREASON_CODE =',if(empty(split(item().Prop_0,'|')[13]),'NULL',concat('''',split(item().Prop_0,'|')[13],'''')),',\n\tREASON_SUBCODE =',if(empty(split(item().Prop_0,'|')[14]),'NULL',concat('''',split(item().Prop_0,'|')[14],'''')),',\n\tLAST_UPDATE_BY =',if(empty(split(item().Prop_0,'|')[15]),'NULL',concat('''',split(item().Prop_0,'|')[15],'''')),',\n\tLAST_UPDATE_DTM =',if(empty(split(item().Prop_0,'|')[16]),'NULL',concat('''',split(item().Prop_0,'|')[16],'''')),',\n\tASSIGN_NO =',if(empty(split(item().Prop_0,'|')[17]),'NULL',concat('''',split(item().Prop_0,'|')[17],'''')),',\n\tTEMP_EXPIRE_DAT =',if(empty(split(item().Prop_0,'|')[18]),'NULL',concat('''',split(item().Prop_0,'|')[18],'''')),',\n\tSEQ_NO =',if(empty(split(item().Prop_0,'|')[19]),'NULL',concat('''',split(item().Prop_0,'|')[19],'''')),',\n\tCREDIT_GRADE =',if(empty(split(item().Prop_0,'|')[20]),'NULL',concat('''',split(item().Prop_0,'|')[20],'''')),',\n\tARPU =',if(empty(split(item().Prop_0,'|')[21]),'NULL',concat('''',split(item().Prop_0,'|')[21],'''')),',\n\tMIN_REVIEW =',if(empty(split(item().Prop_0,'|')[22]),'NULL',concat('''',split(item().Prop_0,'|')[22],'''')),',\n\tSUM_MAIN =',if(empty(split(item().Prop_0,'|')[23]),'NULL',concat('''',split(item().Prop_0,'|')[23],'''')),',\n\tNEXT_BILL_DATE =',if(empty(split(item().Prop_0,'|')[25]),'NULL',concat('''',split(item().Prop_0,'|')[25],'''')),'\n\tWHERE REF_ROW_ID = ''',split(item().Prop_0,'|')[1],''';'))",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "Script Insert Table CC_DATA_FACTORY_HIST",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set haveErrorRow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',item().Prop_0,''',\n\t''',replace(activity('Script Insert or Update Table CC_CREDIT_ASSIGN').Error.Message,'''','\"'),''',\n\t''E''\n\t)')",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "Set haveErrorRow",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Script Insert or Update Table CC_CREDIT_ASSIGN",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "haveErrorRow",
								"value": {
									"value": "@bool(true)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Loop Insert HIST",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach row",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "If have Error Record",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach row",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('haveErrorRow')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Update CC_DATA_FACTORY Success",
							"description": "",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
											"type": "Expression"
										}
									}
								]
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Update CC_DATA_FACTORY haveErrorRow is true",
							"description": "",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
											"type": "Expression"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Move FIle Sync",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If have Error Record",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Move FIle Dat",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If have Error Record",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "update data facEnd Process Move file sync Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Sync",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "update data fac End Process Move file dat Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Dat",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SCHEMA": {
				"type": "string"
			},
			"DATA_TYPE": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"inputPath": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileDatName": {
				"type": "string"
			},
			"dataId": {
				"type": "string"
			},
			"fileSyncName": {
				"type": "string"
			}
		},
		"variables": {
			"haveErrorRow": {
				"type": "Boolean",
				"defaultValue": false
			},
			"refRowId": {
				"type": "String"
			}
		},
		"annotations": []
	}
}