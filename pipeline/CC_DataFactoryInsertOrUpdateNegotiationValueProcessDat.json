{
	"name": "CC_DataFactoryInsertOrUpdateNegotiationValueProcessDat",
	"properties": {
		"activities": [
			{
				"name": "Update CC_DATA_FACTORY Success_copy1",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_TEMP_FILE_DETAIL",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Copy data to CC_TEMP_FILE_DETAIL').output.rowsRead),' record -> count process ',string(sub(activity('Copy data to CC_TEMP_FILE_DETAIL').output.rowsRead,2)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Move FIle Sync",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Update CC_DATA_FACTORY Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Move FIle Dat",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Update CC_DATA_FACTORY Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "update data facEnd Process Move file sync Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Sync",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "update data fac End Process Move file dat Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Dat",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "insert 01",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Read 01",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_NEGOTIATION_VALUE (DATA_ID,PROCESS_TYPE) VALUES (',pipeline().parameters.dataId,',''',activity('Read 01').output.firstRow.Prop_0,''')')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Read 01",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "SELECT old 09",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy data to CC_TEMP_FILE_DETAIL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT ROW_ID AS OLD_COUNT FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_NEGOTIATION_VALUE WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE = ''09''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlMaster",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Update 09",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SELECT old 09",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_NEGOTIATION_VALUE \n    SET PROCESS_TYPE = ''09|',activity('SELECT old 09').output.firstrow.OLD_COUNT,'''\n    ,ROW_ID = NULL \n    WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE = ''09''')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Success",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_NEGOTIATION_VALUE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Copy data to CC_TEMP_FILE_DETAIL').output.rowsRead),' record -> count process ',string(sub(activity('Copy data to CC_TEMP_FILE_DETAIL').output.rowsRead,2)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Copy data to CC_NEGOTIATION_VALUE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Update 09",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT * FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_NEGOTIATION_VALUE WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE LIKE ''02%'';')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": 1000,
						"writeBatchTimeout": "00:30:00",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"ACCNT_ID",
								"BILLING_ACCNT_ID"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "credit-control/logs"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "DATA_NEGO_ID",
									"type": "Int64",
									"physicalType": "bigint"
								},
								"sink": {
									"name": "ROW_ID",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"name": "ROW_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "REF_ROW_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CREATED",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CREATED",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "CREATED_BY",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CREATED_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LAST_UPD",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "LAST_UPD",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "LAST_UPD_BY",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "LAST_UPD_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "REQ_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "REQ_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "BILLING_ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "BILLING_ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "NEGO_CREDIT_LIMIT",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "NEGO_CREDIT_LIMIT",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "AR_BALANCE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AR_BALANCE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "AVAILABLE_FOR_MONTHLY",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AVAILABLE_FOR_MONTHLY",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "PRICE_MAIN_PRO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PRICE_MAIN_PRO",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "MULTIPLIER",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "MULTIPLIER",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 1,
									"precision": 2
								}
							},
							{
								"source": {
									"name": "BA_SCORE_RANGE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "BA_SCORE_RANGE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CL_BEFORE_NEGO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CL_BEFORE_NEGO",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "REASON_BEF_NEGO",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "REASON_BEF_NEGO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CUSTOMER_REQUEST_FLG",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CUSTOMER_REQUEST_FLG",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CUS_REQ_BALANCE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CUS_REQ_BALANCE",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "NEGO_STATUS",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "NEGO_STATUS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "REASON_CODE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "REASON_CODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CHANNEL",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CHANNEL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CL_BEFORE_NEGO_PERM",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CL_BEFORE_NEGO_PERM",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							},
							{
								"source": {
									"name": "CL_BEFORE_NEGO_TEMP",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CL_BEFORE_NEGO_TEMP",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 7,
									"precision": 22
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureSqlMaster",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "CC_TableDynamic",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.SCHEMA",
								"type": "Expression"
							},
							"Table": "CC_NEGOTIATION_VALUE"
						}
					}
				]
			},
			{
				"name": "Copy data to CC_TEMP_FILE_DETAIL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "insert 01",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "DATA_ID",
								"value": {
									"value": "@pipeline().parameters.dataId",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": 1
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": 1000,
						"writeBatchTimeout": "00:30:00",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "DATA_ID",
									"type": "String"
								},
								"sink": {
									"name": "DATA_ID",
									"type": "Int64",
									"physicalType": "bigint"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 1
								},
								"sink": {
									"name": "PROCESS_TYPE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 2
								},
								"sink": {
									"name": "ROW_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 3
								},
								"sink": {
									"name": "CREATED",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 4
								},
								"sink": {
									"name": "CREATED_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 5
								},
								"sink": {
									"name": "LAST_UPD",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 6
								},
								"sink": {
									"name": "LAST_UPD_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 7
								},
								"sink": {
									"name": "REQ_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 8
								},
								"sink": {
									"name": "ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 9
								},
								"sink": {
									"name": "BILLING_ACCNT_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 10
								},
								"sink": {
									"name": "NEGO_CREDIT_LIMIT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 11
								},
								"sink": {
									"name": "AR_BALANCE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 12
								},
								"sink": {
									"name": "AVAILABLE_FOR_MONTHLY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 13
								},
								"sink": {
									"name": "PRICE_MAIN_PRO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 14
								},
								"sink": {
									"name": "MULTIPLIER",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 15
								},
								"sink": {
									"name": "BA_SCORE_RANGE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 16
								},
								"sink": {
									"name": "CL_BEFORE_NEGO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 17
								},
								"sink": {
									"name": "CUS_REQ_BALANCE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 18
								},
								"sink": {
									"name": "NEGO_STATUS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 19
								},
								"sink": {
									"name": "REASON_CODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 20
								},
								"sink": {
									"name": "CHANNEL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"physicalType": "String",
									"ordinal": 21
								},
								"sink": {
									"name": "CL_BEFORE_NEGO_PERM",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 22
								},
								"sink": {
									"name": "CL_BEFORE_NEGO_TEMP",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CCLocalFileMasterSplitPipe",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CC_TableDynamic",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.SCHEMA",
								"type": "Expression"
							},
							"Table": "CC_DATA_FACTORY_NEGOTIATION_VALUE"
						}
					}
				]
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Loop Insert HIST_copy1",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_NEGOTIATION_VALUE",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',replace(string(activity('Copy data to CC_PROFILE_CHANGE').Error),'''','\"')),0,499),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SCHEMA": {
				"type": "string"
			},
			"DATA_TYPE": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"inputPath": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileDatName": {
				"type": "string"
			},
			"dataId": {
				"type": "string"
			},
			"fileSyncName": {
				"type": "string"
			}
		},
		"variables": {
			"haveErrorRow": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": []
	}
}