{
	"name": "CC_DataFactoryProcessFileSyncChildren",
	"properties": {
		"activities": [
			{
				"name": "Read File Sync",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set dataId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@variables('fileinputName')",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Get File size Dat",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Setfor file Dat Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@variables('fileDatName')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"size",
						"exists"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If file size equal and Not exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get File size Dat",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(activity('Get File size Dat').output.exists,equals(variables('fileDatSize'), string(if(contains(activity('Get File size Dat').output,'size'),activity('Get File size Dat').output.size,0))))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set executePipeLineName error message",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "executePipeLineName",
								"value": "error message file dat size not mapping"
							}
						}
					]
				}
			},
			{
				"name": "Setfor file Dat Name",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set For Each File Dat Sizer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileDatName",
					"value": {
						"value": "@split(activity('Read File Sync').output.firstRow.Prop_0,'|')[0]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set For Each File Dat Sizer",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Read File Sync",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileDatSize",
					"value": {
						"value": "@split(activity('Read FIle Sync').output.firstRow.Prop_0,'|')[1]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set dataId",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "insert data factory  process file sync",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "dataId",
					"value": {
						"value": "@string(first(first(activity('insert data factory  process file sync').output.resultSets).rows).DATA_ID)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set fileInputName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set executePipeLineName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileinputName",
					"value": {
						"value": "@pipeline().parameters.fileInputName",
						"type": "Expression"
					}
				}
			},
			{
				"name": "insert data factory  process file sync",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set fileInputName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_TYPE,\n\tFILE_PATH,\n\tFILE_NAME_SYNC,\n\tSTATUS,\n\tDESCRIPTION) OUTPUT INSERTED.DATA_ID\t VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',pipeline().parameters.DATA_TYPE,''',\n\t''',pipeline().parameters.inputPath,''',\n\t''',pipeline().parameters.fileInputName,''',\n\t''P'',''Process file name :  ',pipeline().parameters.fileInputName,''');')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Switch Case Execute pipeline dat",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "If file size equal and Not exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@variables('executePipeLineName')",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "error message file dat size not mapping",
							"activities": [
								{
									"name": "update file dat data not mapping",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY  \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t'FILE_NAME = ''',variables('fileDatName'),''',',\n\t' DESCRIPTION = ''file name data not found/file size no mapping file result ',pipeline().parameters.fileInputName,'''',\n\t' WHERE DATA_ID =',variables('dataId'),';')",
													"type": "Expression"
												}
											}
										]
									}
								}
							]
						},
						{
							"value": "CC_ReviewDataFactoryInsertBillingAccountNoProcessDat",
							"activities": [
								{
									"name": "Execute CC_ReviewInsertBillingAccountNoProcessDat",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CC_ReviewDataFactoryInsertBillingAccountNoProcessDat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SCHEMA": {
												"value": "@pipeline().parameters.SCHEMA",
												"type": "Expression"
											},
											"DATA_TYPE": {
												"value": "@pipeline().parameters.DATA_TYPE",
												"type": "Expression"
											},
											"CREDIT_USER": {
												"value": "@pipeline().parameters.CREDIT_USER",
												"type": "Expression"
											},
											"inputPath": {
												"value": "@pipeline().parameters.inputPath",
												"type": "Expression"
											},
											"moveInputPath": {
												"value": "@pipeline().parameters.moveInputPath",
												"type": "Expression"
											},
											"fileDatName": {
												"value": "@variables('fileDatName')",
												"type": "Expression"
											},
											"dataId": {
												"value": "@variables('dataId')",
												"type": "Expression"
											},
											"fileSyncName": {
												"value": "@variables('fileinputName')",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "CC_ChangeCatSubcatInsertProfileChangeProcessDat",
							"activities": [
								{
									"name": "Execute CC_ChangeCatSubCatInsertProfileChangeProcessDat",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CC_DataFactoryInsertProfileChangeProcessDat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SCHEMA": {
												"value": "@pipeline().parameters.SCHEMA",
												"type": "Expression"
											},
											"DATA_TYPE": {
												"value": "@pipeline().parameters.DATA_TYPE",
												"type": "Expression"
											},
											"CREDIT_USER": {
												"value": "@pipeline().parameters.CREDIT_USER",
												"type": "Expression"
											},
											"inputPath": {
												"value": "@pipeline().parameters.inputPath",
												"type": "Expression"
											},
											"moveInputPath": {
												"value": "@pipeline().parameters.moveInputPath",
												"type": "Expression"
											},
											"fileDatName": {
												"value": "@variables('fileDatName')",
												"type": "Expression"
											},
											"dataId": {
												"value": "@variables('dataId')",
												"type": "Expression"
											},
											"fileSyncName": {
												"value": "@pipeline().parameters.fileInputName",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "CC_ChangeCatSubcatInsertBillingAccountNoProcessDat",
							"activities": [
								{
									"name": "Execute ChangeCatSubCatInsertBillingAccountNoProcessDat",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CC_DataFactoryInsertBillingChangeCatSubcatProcessDat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SCHEMA": {
												"value": "@pipeline().parameters.SCHEMA",
												"type": "Expression"
											},
											"DATA_TYPE": {
												"value": "@pipeline().parameters.DATA_TYPE",
												"type": "Expression"
											},
											"CREDIT_USER": {
												"value": "@pipeline().parameters.CREDIT_USER",
												"type": "Expression"
											},
											"inputPath": {
												"value": "@pipeline().parameters.inputPath",
												"type": "Expression"
											},
											"moveInputPath": {
												"value": "@pipeline().parameters.moveInputPath",
												"type": "Expression"
											},
											"fileDatName": {
												"value": "@variables('fileDatName')",
												"type": "Expression"
											},
											"dataId": {
												"value": "@variables('dataId')",
												"type": "Expression"
											},
											"fileSyncName": {
												"value": "@pipeline().parameters.fileInputName",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "InsertOrUpdateCreditAssignProcessDat",
							"activities": [
								{
									"name": "Execute InsertOrUpdateCreditAssignProcessDat",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "InsertOrUpdateCreditAssignProcessDat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SCHEMA": {
												"value": "@pipeline().parameters.SCHEMA",
												"type": "Expression"
											},
											"DATA_TYPE": {
												"value": "@pipeline().parameters.DATA_TYPE",
												"type": "Expression"
											},
											"CREDIT_USER": {
												"value": "@pipeline().parameters.CREDIT_USER",
												"type": "Expression"
											},
											"inputPath": {
												"value": "@pipeline().parameters.inputPath",
												"type": "Expression"
											},
											"moveInputPath": {
												"value": "@pipeline().parameters.moveInputPath",
												"type": "Expression"
											},
											"fileDatName": {
												"value": "@variables('fileDatName')",
												"type": "Expression"
											},
											"dataId": {
												"value": "@variables('dataId')",
												"type": "Expression"
											},
											"fileSyncName": {
												"value": "@pipeline().parameters.fileInputName",
												"type": "Expression"
											}
										}
									}
								}
							]
						},
						{
							"value": "InsertOrUpdateScoreValueProcessDat",
							"activities": [
								{
									"name": "Execute InsertOrUpdateScoreValueProcessDat",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "InsertOrUpdateScoreValueProcessDat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SCHEMA": {
												"value": "@pipeline().parameters.SCHEMA",
												"type": "Expression"
											},
											"DATA_TYPE": {
												"value": "@pipeline().parameters.DATA_TYPE",
												"type": "Expression"
											},
											"CREDIT_USER": {
												"value": "@pipeline().parameters.CREDIT_USER",
												"type": "Expression"
											},
											"inputPath": {
												"value": "@pipeline().parameters.inputPath",
												"type": "Expression"
											},
											"moveInputPath": {
												"value": "@pipeline().parameters.moveInputPath",
												"type": "Expression"
											},
											"fileDatName": {
												"value": "@variables('fileDatName')",
												"type": "Expression"
											},
											"dataId": {
												"value": "@variables('dataId')",
												"type": "Expression"
											},
											"fileSyncName": {
												"value": "@pipeline().parameters.fileInputName",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "Fail Not Have Pipeline Name in data factory",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "Fail Not Have Pipeline Name in data factory",
								"errorCode": "400"
							}
						}
					]
				}
			},
			{
				"name": "Set executePipeLineName",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "executePipeLineName",
					"value": {
						"value": "@pipeline().parameters.executePipeLineName",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"inputPath": {
				"type": "string"
			},
			"SCHEMA": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"DATA_TYPE": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileInputName": {
				"type": "string"
			},
			"executePipeLineName": {
				"type": "string"
			}
		},
		"variables": {
			"fileDatName": {
				"type": "String"
			},
			"fileDatSize": {
				"type": "String"
			},
			"dataId": {
				"type": "String"
			},
			"fileinputName": {
				"type": "String"
			},
			"exceptionError": {
				"type": "String"
			},
			"executePipeLineName": {
				"type": "String"
			}
		},
		"annotations": []
	}
}