{
	"name": "CC_ChangeCatSubCatSendBillingAccountNo",
	"properties": {
		"activities": [
			{
				"name": "Get Config Value",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT VAL2,VAL5,VAL6 from ',variables('SCHEMA'),'.CC_CURRENT c WHERE c.LOV_TYPE= ''',variables('LOV_TYPE'),''' AND c.LOV_NAME = ''',variables('LOV_NAME'),''' AND c.ACTIVE_FLG =''Y''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlMaster",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If Configval is nul or Some Config val is Null",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Config Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(not(contains(string(activity('Get Config Value').output),'firstRow')),or(or(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val2,'')),''),null,activity('Get Config Value').output.firstRow.val2),null),equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val5,'')),''),null,activity('Get Config Value').output.firstRow.val5),null)),equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val6,'')),''),null,activity('Get Config Value').output.firstRow.val6),null)))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set inputPath",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "inputPath",
								"value": {
									"value": "@activity('Get Config Value in Clound Storage').output.firstRow.val1",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set fileTypeInputFile",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set inputPath",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "fileTypeInputFile",
								"value": {
									"value": "@activity('Get Config Value in Clound Storage').output.firstRow.val4",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set prefixInputFile",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set fileTypeInputFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "prefixInputFile",
								"value": {
									"value": "@activity('Get Config Value in Clound Storage').output.firstRow.val3",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set moveInputPath",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set prefixInputFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "moveInputPath",
								"value": {
									"value": "@activity('Get Config Value in Clound Storage').output.firstRow.val7",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Execute All Process",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Set moveInputPath",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CC_ReviewFindFileSyncInDir",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"inputPath": {
										"value": "@variables('inputPath')",
										"type": "Expression"
									},
									"prefixInputFile": {
										"value": "@variables('prefixInputFile')",
										"type": "Expression"
									},
									"fileTypeInputFile": {
										"value": "@variables('fileTypeInputFile')",
										"type": "Expression"
									},
									"SCHEMA": {
										"value": "@variables('SCHEMA')",
										"type": "Expression"
									},
									"CREDIT_USER": {
										"value": "@variables('CREDIT_USER')",
										"type": "Expression"
									},
									"FILE_TYPE": {
										"value": "@variables('FILE_TYPE')",
										"type": "Expression"
									},
									"LOV_TYPE_REVIEW": {
										"value": "@variables('REVIEW_TYPE')",
										"type": "Expression"
									},
									"moveInputPath": {
										"value": "@variables('moveInputPath')",
										"type": "Expression"
									},
									"FILE_UPDATE_TYPE": {
										"value": "@variables('FILE_UPDATE_TYPE')",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "insert error when config val error",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('INSERT INTO ',variables('SCHEMA'),'.CC_CHANGE_CAT_SUBCAT \n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tCHANGE_TYPE,\n\tSTATUS,\n\tDESCRIPTION) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',variables('CREDIT_USER'),''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',variables('CREDIT_USER'),''',\n\t''',variables('CHANGE_TYPE'),''',\n\t''E'',''',\n\tif(not(contains(string(activity('Get Config Value').output),'firstRow')),concat('Config LOV_TYPE : ',variables('LOV_TYPE'),' ,LOV_NAME : ',variables('LOV_NAME'),' Data not found.'),concat('Config ',\n\tif(startswith(\n\tconcat(if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val2,'')),''),null,activity('Get Config Value').output.firstRow.val2),null),',Output path(VAL2)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val5,'')),''),null,activity('Get Config Value').output.firstRow.val5),null),',Prefix Output path(VAL5)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val6,'')),''),null,activity('Get Config Value').output.firstRow.val6),null),',file type Output path(VAL6)',''))\n\t,','),substring(\n\tconcat(if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val2,'')),''),null,activity('Get Config Value').output.firstRow.val2),null),',Output path(VAL2)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val5,'')),''),null,activity('Get Config Value').output.firstRow.val5),null),',Prefix Output path(VAL5)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val6,'')),''),null,activity('Get Config Value').output.firstRow.val6),null),',file type Output path(VAL6)',''))\n\t,1,sub(length(\n\tconcat(if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val2,'')),''),null,activity('Get Config Value').output.firstRow.val2),null),',Output path(VAL2)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val5,'')),''),null,activity('Get Config Value').output.firstRow.val5),null),',Prefix Output path(VAL5)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val6,'')),''),null,activity('Get Config Value').output.firstRow.val6),null),',file type Output path(VAL6)',''))\n\t),1)),\n\tconcat(if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val2,'')),''),null,activity('Get Config Value').output.firstRow.val2),null),',Output path(VAL2)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val5,'')),''),null,activity('Get Config Value').output.firstRow.val5),null),',Prefix Output path(VAL5)',''),if(equals(if(equals(trim(coalesce(activity('Get Config Value').output.firstRow.val6,'')),''),null,activity('Get Config Value').output.firstRow.val6),null),',file type Output path(VAL6)',''))\n\t)\n\t,' Data not found.')),''');')",
											"type": "Expression"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"LOV_TYPE": {
				"type": "String",
				"defaultValue": "CC_MONITOR_MASTER"
			},
			"LOV_NAME": {
				"type": "String",
				"defaultValue": "cc_send_chnage_cat_sub_cat"
			},
			"SCHEMA": {
				"type": "String",
				"defaultValue": "CREDIT_DEV"
			},
			"CREDIT_USER": {
				"type": "String",
				"defaultValue": "DATA_FAC_SEND_ACCNT_NO"
			},
			"CHANGE_TYPE": {
				"type": "String",
				"defaultValue": "CHANGE_TYPE_NULL"
			}
		},
		"annotations": []
	}
}