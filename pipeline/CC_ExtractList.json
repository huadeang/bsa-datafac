{
	"name": "CC_ExtractList",
	"properties": {
		"activities": [
			{
				"name": "Set countRound",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set tempList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "countRound",
					"value": {
						"value": "@string(if(equals(length(split(string(div(length(pipeline().parameters.baList),float(variables('limitPerRound')))),'.')),2),add(div(length(pipeline().parameters.baList),int(variables('limitPerRound'))),1),div(length(pipeline().parameters.baList),int(variables('limitPerRound')))))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set tempCountList",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set countRound",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tempCountList",
					"value": {
						"value": "@take(pipeline().parameters.baList,int(variables('countRound')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach tempCountList",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set tempCountList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('tempCountList')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Set leftList",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "leftList",
								"value": {
									"value": "@take(variables('tempList'),int(variables('limitPerRound')))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set rightList",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set leftList",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "rightList",
								"value": {
									"value": "@skip(variables('tempList'),int(variables('limitPerRound')))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set newTempList",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set rightList",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "tempList",
								"value": {
									"value": "@variables('rightList')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append ListExtract",
							"type": "AppendVariable",
							"dependsOn": [
								{
									"activity": "Set newTempList",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "listExtract",
								"value": {
									"value": "@json(concat('{ \"value\" : ',string(variables('leftList')),'}'))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set tempList",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "tempList",
					"value": {
						"value": "@pipeline().parameters.baList",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"outputPath": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"prefixOutputFile": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"fileTypeOutputFile": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"SCHEMA": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"CREDIT_USER": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"CHANGE_TYPE": {
				"type": "string",
				"defaultValue": "TEST"
			},
			"baList": {
				"type": "array",
				"defaultValue": [
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					},
					{
						"name": "RES_CAT_SUBCAT_PROFILE_CHANGE_20220601_1402.sync",
						"type": "File"
					}
				]
			},
			"listPipeLineName": {
				"type": "string",
				"defaultValue": "TEST"
			}
		},
		"variables": {
			"listExtract": {
				"type": "Array"
			},
			"countRound": {
				"type": "String"
			},
			"tempCountList": {
				"type": "Array"
			},
			"limitPerRound": {
				"type": "String",
				"defaultValue": "5.0000"
			},
			"leftList": {
				"type": "Array"
			},
			"rightList": {
				"type": "Array"
			},
			"tempList": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}