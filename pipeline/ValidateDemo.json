{
	"name": "ValidateDemo",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DemoValidator2",
						"type": "DatasetReference"
					},
					"fieldList": [
						"structure",
						"columnCount",
						"itemName"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Metadata1').output.structure,json('[\n        {\n            \"name\": \"Prop_0\",\n            \"type\": \"String\"\n        },\n        {\n            \"name\": \"Prop_1\",\n            \"type\": \"String\"\n        },\n        {\n            \"name\": \"Prop_2\",\n            \"type\": \"String\"\n        }\n    ]'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "WaitForFalse",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "demo",
										"wildcardFileName": {
											"value": "@activity('Get Metadata1').output.itemName",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "BinarySource",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "TargetBinary",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@activity('Get Metadata1').output.itemName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": []
	}
}