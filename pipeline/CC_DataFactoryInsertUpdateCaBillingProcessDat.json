{
	"name": "CC_DataFactoryInsertUpdateCaBillingProcessDat",
	"properties": {
		"activities": [
			{
				"name": "Lookup File dat",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter Start With 02",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup File dat",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup File dat').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().Prop_0,'02')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach row",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter Start With 02",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter Start With 02').output.Value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "Script Insert FACTORY_HIST Or CC_UPDATE_CA_BILLING",
							"description": "",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set haveErrorRow_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@if(empty(split(item().Prop_0,'|')[1]),\nconcat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (\n\tCONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\tCONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',item().Prop_0,''',\n\t''accntId data not found'',\n\t''E''\n\t)')\n,concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_UPDATE_CA_BILLING\n\t(CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tACCNT_ID,\n\tBILLING_ACCNT_ID,\n\tSTATUS_CD,\n\tDATA_ID,\n\tSTATUS,\n\tREMARK) VALUES (\n\tCONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\tCONVERT(DATETIME2(0),''',convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t''',split(item().Prop_0,'|')[1],''',\n\t''',split(item().Prop_0,'|')[2],''',\n\t''',split(item().Prop_0,'|')[3],''',\n\t',pipeline().parameters.dataId,',\n\t''S'',\n\t''',\n\tif(empty(split(item().Prop_0,'|')[2]),'billing accntId data not found',concat(\n\tif(empty(split(item().Prop_0,'|')[3]),'statusCd data not found and default is Inactive',null)))\n\t,''');'))",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "Set haveErrorRow",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Script Insert FACTORY_HIST Or CC_UPDATE_CA_BILLING",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "haveErrorRow",
								"value": {
									"value": "@bool(true)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Script Insert Table CC_DATA_FACTORY_HIST",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set haveErrorRow",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST \n    (CREATED,\n\tCREATED_BY,\n\tLAST_UPD,\n\tLAST_UPD_BY,\n\tDATA_ID,\n\tDESCRIPTION,\n\tERROR_MSG,\n\tSTATUS) VALUES (CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\t''',pipeline().parameters.CREDIT_USER,''',\n\t',pipeline().parameters.dataId,',\n\t''',item().Prop_0,''',\n\t''',substring(replace(activity('Script Insert FACTORY_HIST Or CC_UPDATE_CA_BILLING').Error.Message,'''','\"'),0,499),''',\n\t''E''\n\t)')",
											"type": "Expression"
										}
									}
								]
							}
						},
						{
							"name": "Set haveErrorRow_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "haveErrorRow",
								"value": {
									"value": "@if(empty(split(item().Prop_0,'|')[1]),bool(true),bool(false))",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Loop Insert HIST",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach row",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "If have Error Record",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach row",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('haveErrorRow')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Update CC_DATA_FACTORY Success",
							"description": "",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''S'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
											"type": "Expression"
										}
									}
								]
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Update CC_DATA_FACTORY haveErrorRow is true",
							"description": "",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''Process file name : ',pipeline().parameters.fileDatName,' total count ',string(activity('Lookup File dat').output.count),' record -> count process ',string(length(activity('Filter Start With 02').output.Value)),' record.''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
											"type": "Expression"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SCHEMA": {
				"type": "string"
			},
			"DATA_TYPE": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"inputPath": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileDatName": {
				"type": "string"
			},
			"dataId": {
				"type": "string"
			},
			"fileSyncName": {
				"type": "string"
			}
		},
		"variables": {
			"haveErrorRow": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": []
	}
}