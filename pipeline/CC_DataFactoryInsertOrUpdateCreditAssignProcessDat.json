{
	"name": "CC_DataFactoryInsertOrUpdateCreditAssignProcessDat",
	"properties": {
		"activities": [
			{
				"name": "Move FIle Sync",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DELETE CC_CREDIT_ASSIGN SQL14",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileSyncName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Move FIle Dat",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DELETE CC_CREDIT_ASSIGN SQL14",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CC_MoveFile",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"inDir": {
							"value": "@pipeline().parameters.inputPath",
							"type": "Expression"
						},
						"outDir": {
							"value": "@pipeline().parameters.moveInputPath",
							"type": "Expression"
						},
						"inName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						},
						"outName": {
							"value": "@pipeline().parameters.fileDatName",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "update data facEnd Process Move file sync Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Sync",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "update data fac End Process Move file dat Error",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Move FIle Dat",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY \n\tSET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),''')\n\t, LAST_UPD_BY = ''',\n\tpipeline().parameters.CREDIT_USER,\n\t''', STATUS = ''E'',',\n\t' DESCRIPTION = ''Unable to move the file name : ',pipeline().parameters.fileSyncName,'''',\n\t' WHERE DATA_ID =',pipeline().parameters.dataId,';')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN').Error),0,if(greater(length(activity('Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN').Error),499),499,length(activity('Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "insert 01",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "DATA_ID",
								"value": {
									"value": "@pipeline().parameters.dataId",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings",
							"skipLineCount": 1
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": 1000,
						"writeBatchTimeout": "00:30:00",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"path": "credit-control/logs"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"type": "String",
									"ordinal": 1
								},
								"sink": {
									"name": "PROCESS_TYPE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 2
								},
								"sink": {
									"name": "ROW_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 3
								},
								"sink": {
									"name": "CREATED",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 4
								},
								"sink": {
									"name": "CREATED_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 5
								},
								"sink": {
									"name": "LAST_UPD",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 6
								},
								"sink": {
									"name": "LAST_UPD_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 7
								},
								"sink": {
									"name": "BILLING_ACCOUNT_NUM",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 8
								},
								"sink": {
									"name": "LIMIT_MNY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 9
								},
								"sink": {
									"name": "GNV_LIMIT_MNY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 10
								},
								"sink": {
									"name": "THRESHOLD_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 11
								},
								"sink": {
									"name": "REQUEST_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 12
								},
								"sink": {
									"name": "ACTION_TYPE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 13
								},
								"sink": {
									"name": "ACTION_DTM",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 14
								},
								"sink": {
									"name": "REASON_CODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 15
								},
								"sink": {
									"name": "REASON_SUBCODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 16
								},
								"sink": {
									"name": "LAST_UPDATE_BY",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 17
								},
								"sink": {
									"name": "LAST_UPDATE_DTM",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 18
								},
								"sink": {
									"name": "ASSIGN_NO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 19
								},
								"sink": {
									"name": "TEMP_EXPIRE_DAT",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 20
								},
								"sink": {
									"name": "SEQ_NO",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 21
								},
								"sink": {
									"name": "CREDIT_GRADE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 22
								},
								"sink": {
									"name": "ARPU",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 23
								},
								"sink": {
									"name": "MIN_REVIEW",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 24
								},
								"sink": {
									"name": "SUM_MAIN",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 25
								},
								"sink": {
									"name": "NEXT_BILL",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 26
								},
								"sink": {
									"name": "NEXT_BILL_DATE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 27
								},
								"sink": {
									"name": "PHX_ROW_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"type": "String",
									"ordinal": 28
								},
								"sink": {
									"name": "PHX_OPERATION",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DATA_ID",
									"type": "String"
								},
								"sink": {
									"name": "DATA_ID",
									"type": "Int64",
									"physicalType": "bigint"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CCLocalFileMasterSplitPipe",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CC_TableDynamic",
						"type": "DatasetReference",
						"parameters": {
							"Schema": {
								"value": "@pipeline().parameters.SCHEMA",
								"type": "Expression"
							},
							"Table": "CC_DATA_FACTORY_CREDIT_ASSIGN"
						}
					}
				]
			},
			{
				"name": "insert 01",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Read 01",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN (DATA_ID,PROCESS_TYPE) VALUES (',pipeline().parameters.dataId,',''',activity('Read 01').output.firstRow.Prop_0,''')')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Read 01",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "FileServerReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CCLocalFileMasterNotSplit",
						"type": "DatasetReference",
						"parameters": {
							"filePath": {
								"value": "@pipeline().parameters.inputPath",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileDatName",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "SELECT old 09",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy data to CC_DATA_FACTORY_CREDIT_ASSIGN",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('SELECT ROW_ID AS OLD_COUNT FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE = ''09''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlMaster",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Update 09",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "SELECT old 09",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN\n    SET PROCESS_TYPE = ''09|',activity('SELECT old 09').output.firstrow.OLD_COUNT,'''\n    ,ROW_ID = NULL \n    WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE = ''09''')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Insert into CC_DATA_FACTORY_HIST SQL9",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Update 09",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST(CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,DATA_ID,STATUS,DESCRIPTION,ERROR_MSG )\nSELECT TEMP.CREATED,TEMP.CREATED_BY,TEMP.LAST_UPD,TEMP.LAST_UPD_BY,TEMP.DATA_ID,TEMP.STATUS,TEMP.DESCRIPTION,TEMP.ERROR_MSG\nFROM (SELECT GETDATE() AS CREATED ,''DATA_FAC_INSERT_ASSIGN'' AS CREATED_BY ,GETDATE() AS LAST_UPD ,''DATA_FAC_INSERT_ASSIGN'' AS LAST_UPD_BY ,A.DATA_ID,''E'' AS STATUS\n,(CONCAT(A.PROCESS_TYPE,''|'',A.ROW_ID,''|'',A.CREATED,''|'',A.CREATED_BY,''|'',A.LAST_UPD,''|'',A.LAST_UPD_BY,''|''\n ,A.BILLING_ACCOUNT_NUM,''|'',A.LIMIT_MNY,''|'',A.GNV_LIMIT_MNY,''|'',A.THRESHOLD_ID,''|'',A.REQUEST_ID,''|''\n ,A.ACTION_TYPE,''|'',A.ACTION_DTM,''|'',A.REASON_CODE,''|'',A.REASON_SUBCODE,''|'',A.LAST_UPDATE_BY,''|'',A.LAST_UPDATE_DTM,''|''\n ,A.ASSIGN_NO,''|'',A.TEMP_EXPIRE_DAT,''|'',A.SEQ_NO,''|'',A.CREDIT_GRADE,''|'',A.ARPU,''|'',A.MIN_REVIEW,''|'',A.SUM_MAIN,''|''\n ,A.NEXT_BILL,''|'',A.NEXT_BILL_DATE,''|'',A.PHX_ROW_ID,''|'', A.PHX_OPERATION)) AS DESCRIPTION\n,''PHX_ROW_ID Data not found'' AS ERROR_MSG,CA.ROW_ID AS REF_ID \nFROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nLEFT JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.ROW_ID = A.PHX_ROW_ID \nWHERE A.DATA_ID = ',pipeline().parameters.dataId,' AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NOT NULL AND A.PHX_OPERATION = ''Delete''\nORDER BY A.DATA_ASSIGN_ID ASC OFFSET 0 ROWS)TEMP WHERE NULLIF(TEMP.REF_ID,'''') IS NULL\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Insert into CC_DATA_FACTORY_HIST SQL12",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL9",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST(CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,DATA_ID,STATUS,DESCRIPTION,ERROR_MSG )\nSELECT TEMP.CREATED,TEMP.CREATED_BY,TEMP.LAST_UPD,TEMP.LAST_UPD_BY,TEMP.DATA_ID,TEMP.STATUS,TEMP.DESCRIPTION,TEMP.ERROR_MSG\nFROM (SELECT GETDATE() AS CREATED ,''DATA_FAC_INSERT_ASSIGN'' AS CREATED_BY ,GETDATE() AS LAST_UPD ,''DATA_FAC_INSERT_ASSIGN'' AS LAST_UPD_BY ,A.DATA_ID,''E'' AS STATUS\n,(CONCAT(A.PROCESS_TYPE,''|'',A.ROW_ID,''|'',A.CREATED,''|'',A.CREATED_BY,''|'',A.LAST_UPD,''|'',A.LAST_UPD_BY,''|''\n ,A.BILLING_ACCOUNT_NUM,''|'',A.LIMIT_MNY,''|'',A.GNV_LIMIT_MNY,''|'',A.THRESHOLD_ID,''|'',A.REQUEST_ID,''|''\n ,A.ACTION_TYPE,''|'',A.ACTION_DTM,''|'',A.REASON_CODE,''|'',A.REASON_SUBCODE,''|'',A.LAST_UPDATE_BY,''|'',A.LAST_UPDATE_DTM,''|''\n ,A.ASSIGN_NO,''|'',A.TEMP_EXPIRE_DAT,''|'',A.SEQ_NO,''|'',A.CREDIT_GRADE,''|'',A.ARPU,''|'',A.MIN_REVIEW,''|'',A.SUM_MAIN,''|''\n ,A.NEXT_BILL,''|'',A.NEXT_BILL_DATE,''|'',A.PHX_ROW_ID,''|'', A.PHX_OPERATION)) AS DESCRIPTION\n,''ROW_ID Data not found'' AS ERROR_MSG,CA.ROW_ID AS REF_ID \nFROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nLEFT JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.REF_ROW_ID = A.ROW_ID \nWHERE A.DATA_ID = ',pipeline().parameters.dataId,' AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NULL AND A.PHX_OPERATION = ''Delete'' \nORDER BY A.DATA_ASSIGN_ID ASC OFFSET 0 ROWS)TEMP WHERE NULLIF(TEMP.REF_ID,'''') IS NULL\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Insert into CC_DATA_FACTORY_HIST SQL7",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL12",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_HIST(CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,DATA_ID,STATUS,DESCRIPTION,ERROR_MSG )\nSELECT GETDATE(),''DATA_FAC_INSERT_ASSIGN'',GETDATE(),''DATA_FAC_INSERT_ASSIGN'',DATA_ID,''E''\n,(CONCAT(PROCESS_TYPE,''|'',ROW_ID,''|'',CREATED,''|'',CREATED_BY,''|'',LAST_UPD,''|'',LAST_UPD_BY,''|''\n ,BILLING_ACCOUNT_NUM,''|'',LIMIT_MNY,''|'',GNV_LIMIT_MNY,''|'',THRESHOLD_ID,''|'',REQUEST_ID,''|''\n ,ACTION_TYPE,''|'',ACTION_DTM,''|'',REASON_CODE,''|'',REASON_SUBCODE,''|'',LAST_UPDATE_BY,''|'',LAST_UPDATE_DTM,''|''\n ,ASSIGN_NO,''|'',TEMP_EXPIRE_DAT,''|'',SEQ_NO,''|'',CREDIT_GRADE,''|'',ARPU,''|'',MIN_REVIEW,''|'',SUM_MAIN,''|''\n ,NEXT_BILL,''|'',NEXT_BILL_DATE,''|'',PHX_ROW_ID,''|'', PHX_OPERATION)) \n,''PHX_ROW_ID Data not found''\nFROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE =''02'' AND NULLIF(PHX_ROW_ID,'''') IS NOT NULL AND NULLIF(PHX_OPERATION ,'''') IS NULL ORDER BY DATA_ASSIGN_ID ASC OFFSET 0 ROWS\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Insert into CC_CREDIT_ASSIGN_AT SQL10",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL7",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN_AT(REF_ROW_ID,CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,\nBATCH_CREATED,BATCH_CREATED_BY,ASSIGN_ROW_ID,ASSIGN_REF_ROW_ID,BILLING_ACCOUNT_NUM,LIMIT_MNY,\nGNV_LIMIT_MNY,THRESHOLD_ID,REQUEST_ID,ACTION_TYPE,ACTION_DTM,REASON_CODE,REASON_SUBCODE,LAST_UPDATE_BY,LAST_UPDATE_DTM,\nASSIGN_NO,TEMP_EXPIRE_DAT,SEQ_NO,CREDIT_GRADE,ARPU,MIN_REVIEW,SUM_MAIN,NEXT_BILL_DATE)\nSELECT A.ROW_ID,A.CREATED,A.CREATED_BY,A.LAST_UPD,A.LAST_UPD_BY,\nGETDATE() AS BATCH_LAST_UPD ,''DATA_FAC_INSERT_ASSIGN'' AS BATCH_LAST_UPD_BY,A.PHX_ROW_ID,A.ROW_ID,A.BILLING_ACCOUNT_NUM,A.LIMIT_MNY,\nA.GNV_LIMIT_MNY,A.THRESHOLD_ID,A.REQUEST_ID,A.ACTION_TYPE,A.ACTION_DTM,A.REASON_CODE,A.REASON_SUBCODE,A.LAST_UPDATE_BY,A.LAST_UPDATE_DTM,\nA.ASSIGN_NO,A.TEMP_EXPIRE_DAT,A.SEQ_NO,A.CREDIT_GRADE,A.ARPU,A.MIN_REVIEW,A.SUM_MAIN,A.NEXT_BILL_DATE\nFROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nINNER JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.ROW_ID = A.PHX_ROW_ID \nWHERE A.DATA_ID = ',pipeline().parameters.dataId,' AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NOT NULL AND A.PHX_OPERATION = ''Delete'' \nORDER BY A.DATA_ASSIGN_ID ASC OFFSET 0 ROWS\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Insert into CC_CREDIT_ASSIGN_AT SQL13",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_CREDIT_ASSIGN_AT SQL10",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('INSERT INTO ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN_AT(REF_ROW_ID,CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,\nBATCH_CREATED,BATCH_CREATED_BY,ASSIGN_ROW_ID,ASSIGN_REF_ROW_ID,BILLING_ACCOUNT_NUM,LIMIT_MNY,\nGNV_LIMIT_MNY,THRESHOLD_ID,REQUEST_ID,ACTION_TYPE,ACTION_DTM,REASON_CODE,REASON_SUBCODE,LAST_UPDATE_BY,LAST_UPDATE_DTM,\nASSIGN_NO,TEMP_EXPIRE_DAT,SEQ_NO,CREDIT_GRADE,ARPU,MIN_REVIEW,SUM_MAIN,NEXT_BILL_DATE)\nSELECT A.ROW_ID,A.CREATED,A.CREATED_BY,A.LAST_UPD,A.LAST_UPD_BY,\nGETDATE() AS BATCH_LAST_UPD ,''DATA_FAC_INSERT_ASSIGN'' AS BATCH_LAST_UPD_BY,A.PHX_ROW_ID,A.ROW_ID,A.BILLING_ACCOUNT_NUM,A.LIMIT_MNY,\nA.GNV_LIMIT_MNY,A.THRESHOLD_ID,A.REQUEST_ID,A.ACTION_TYPE,A.ACTION_DTM,A.REASON_CODE,A.REASON_SUBCODE,A.LAST_UPDATE_BY,A.LAST_UPDATE_DTM,\nA.ASSIGN_NO,A.TEMP_EXPIRE_DAT,A.SEQ_NO,A.CREDIT_GRADE,A.ARPU,A.MIN_REVIEW,A.SUM_MAIN,A.NEXT_BILL_DATE\nFROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nINNER JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.REF_ROW_ID = A.ROW_ID \nWHERE A.DATA_ID = ',pipeline().parameters.dataId,' AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NULL AND A.PHX_OPERATION = ''Delete'' \nORDER BY A.DATA_ASSIGN_ID ASC OFFSET 0 ROWS\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "MERGE Update CC_CREDIT_ASSIGN SQL6",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_CREDIT_ASSIGN_AT SQL13",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('WITH ASSIGN AS (SELECT * FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE =''02'' AND NULLIF(PHX_ROW_ID,'''') IS NOT NULL AND NULLIF(PHX_OPERATION ,'''') IS NULL ORDER BY DATA_ASSIGN_ID ASC OFFSET 0 ROWS)\nMERGE ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN AS TARGET\nUSING ASSIGN AS SOURCE\nON (TARGET.ROW_ID = SOURCE.PHX_ROW_ID)\nWHEN MATCHED\nTHEN \nUPDATE\nSET\nTARGET.REF_ROW_ID = SOURCE.ROW_ID,\nTARGET.CREATED = SOURCE.CREATED,\nTARGET.CREATED_BY = SOURCE.CREATED_BY,\nTARGET.LAST_UPD = SOURCE.LAST_UPD,\nTARGET.LAST_UPD_BY = SOURCE.LAST_UPD_BY,\nTARGET.BILLING_ACCOUNT_NUM = SOURCE.BILLING_ACCOUNT_NUM,\nTARGET.LIMIT_MNY = SOURCE.LIMIT_MNY,\nTARGET.GNV_LIMIT_MNY = SOURCE.GNV_LIMIT_MNY,\nTARGET.THRESHOLD_ID = SOURCE.THRESHOLD_ID,\nTARGET.REQUEST_ID = SOURCE.REQUEST_ID,\nTARGET.ACTION_TYPE = SOURCE.ACTION_TYPE,\nTARGET.ACTION_DTM = SOURCE.ACTION_DTM,\nTARGET.REASON_CODE = SOURCE.REASON_CODE,\nTARGET.REASON_SUBCODE = SOURCE.REASON_SUBCODE,\nTARGET.LAST_UPDATE_BY = SOURCE.LAST_UPDATE_BY,\nTARGET.LAST_UPDATE_DTM = SOURCE.LAST_UPDATE_DTM,\nTARGET.ASSIGN_NO = SOURCE.ASSIGN_NO,\nTARGET.TEMP_EXPIRE_DAT = SOURCE.TEMP_EXPIRE_DAT,\nTARGET.SEQ_NO = SOURCE.SEQ_NO,\nTARGET.CREDIT_GRADE = SOURCE.CREDIT_GRADE,\nTARGET.ARPU = SOURCE.ARPU,\nTARGET.MIN_REVIEW = SOURCE.MIN_REVIEW,\nTARGET.SUM_MAIN = SOURCE.SUM_MAIN,\nTARGET.NEXT_BILL_DATE = SOURCE.NEXT_BILL_DATE;\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "MERGE Update or Insert CC_CREDIT_ASSIGN SQL8",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MERGE Update CC_CREDIT_ASSIGN SQL6",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('WITH ASSIGN AS (SELECT * FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN WHERE DATA_ID = ',pipeline().parameters.dataId,' AND PROCESS_TYPE =''02'' AND NULLIF(PHX_ROW_ID,'''') IS NULL AND NULLIF(PHX_OPERATION ,'''') IS NULL ORDER BY DATA_ASSIGN_ID ASC OFFSET 0 ROWS)\nMERGE ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN AS TARGET\nUSING ASSIGN AS SOURCE\nON (TARGET.REF_ROW_ID = SOURCE.ROW_ID)\nWHEN MATCHED\nTHEN \nUPDATE\nSET\nTARGET.REF_ROW_ID = SOURCE.ROW_ID,\nTARGET.CREATED = SOURCE.CREATED,\nTARGET.CREATED_BY = SOURCE.CREATED_BY,\nTARGET.LAST_UPD = SOURCE.LAST_UPD,\nTARGET.LAST_UPD_BY = SOURCE.LAST_UPD_BY,\nTARGET.BILLING_ACCOUNT_NUM = SOURCE.BILLING_ACCOUNT_NUM,\nTARGET.LIMIT_MNY = SOURCE.LIMIT_MNY,\nTARGET.GNV_LIMIT_MNY = SOURCE.GNV_LIMIT_MNY,\nTARGET.THRESHOLD_ID = SOURCE.THRESHOLD_ID,\nTARGET.REQUEST_ID = SOURCE.REQUEST_ID,\nTARGET.ACTION_TYPE = SOURCE.ACTION_TYPE,\nTARGET.ACTION_DTM = SOURCE.ACTION_DTM,\nTARGET.REASON_CODE = SOURCE.REASON_CODE,\nTARGET.REASON_SUBCODE = SOURCE.REASON_SUBCODE,\nTARGET.LAST_UPDATE_BY = SOURCE.LAST_UPDATE_BY,\nTARGET.LAST_UPDATE_DTM = SOURCE.LAST_UPDATE_DTM,\nTARGET.ASSIGN_NO = SOURCE.ASSIGN_NO,\nTARGET.TEMP_EXPIRE_DAT = SOURCE.TEMP_EXPIRE_DAT,\nTARGET.SEQ_NO = SOURCE.SEQ_NO,\nTARGET.CREDIT_GRADE = SOURCE.CREDIT_GRADE,\nTARGET.ARPU = SOURCE.ARPU,\nTARGET.MIN_REVIEW = SOURCE.MIN_REVIEW,\nTARGET.SUM_MAIN = SOURCE.SUM_MAIN,\nTARGET.NEXT_BILL_DATE = SOURCE.NEXT_BILL_DATE\nWHEN NOT MATCHED BY TARGET \nTHEN INSERT (REF_ROW_ID,CREATED,CREATED_BY,LAST_UPD,LAST_UPD_BY,BILLING_ACCOUNT_NUM,LIMIT_MNY,\nGNV_LIMIT_MNY,THRESHOLD_ID,REQUEST_ID,ACTION_TYPE,ACTION_DTM,REASON_CODE,REASON_SUBCODE,LAST_UPDATE_BY,\nLAST_UPDATE_DTM,ASSIGN_NO,TEMP_EXPIRE_DAT,SEQ_NO,CREDIT_GRADE,ARPU,MIN_REVIEW,SUM_MAIN,NEXT_BILL_DATE) \nVALUES (SOURCE.ROW_ID ,\n SOURCE.CREATED ,\n SOURCE.CREATED_BY,\n SOURCE.LAST_UPD ,\n SOURCE.LAST_UPD_BY,\n SOURCE.BILLING_ACCOUNT_NUM,\n SOURCE.LIMIT_MNY,\n SOURCE.GNV_LIMIT_MNY,\n SOURCE.THRESHOLD_ID,\n SOURCE.REQUEST_ID,\n SOURCE.ACTION_TYPE,\n SOURCE.ACTION_DTM,\n SOURCE.REASON_CODE,\n SOURCE.REASON_SUBCODE,\n SOURCE.LAST_UPDATE_BY,\n SOURCE.LAST_UPDATE_DTM,\n SOURCE.ASSIGN_NO,\n SOURCE.TEMP_EXPIRE_DAT,\n SOURCE.SEQ_NO,\n SOURCE.CREDIT_GRADE,\n SOURCE.ARPU,\n SOURCE.MIN_REVIEW,\n SOURCE.SUM_MAIN,\n SOURCE.NEXT_BILL_DATE);\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "DELETE CC_CREDIT_ASSIGN SQL11",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MERGE Update or Insert CC_CREDIT_ASSIGN SQL8",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('DELETE FROM ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN WHERE ROW_ID IN(SELECT CA.ROW_ID FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nINNER JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.ROW_ID = A.PHX_ROW_ID \nWHERE A.DATA_ID = dataId AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NOT NULL AND A.PHX_OPERATION = ''Delete'' )\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "DELETE CC_CREDIT_ASSIGN SQL14",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "DELETE CC_CREDIT_ASSIGN SQL11",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('DELETE FROM ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN WHERE ROW_ID IN(SELECT CA.ROW_ID FROM ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY_CREDIT_ASSIGN A  \nINNER JOIN ',pipeline().parameters.SCHEMA,'.CC_CREDIT_ASSIGN CA ON CA.ROW_ID = A.PHX_ROW_ID \nWHERE A.DATA_ID = ',pipeline().parameters.dataId,' AND A.PROCESS_TYPE =''02'' AND NULLIF(A.PHX_ROW_ID,'''') IS NOT NULL AND A.PHX_OPERATION = ''Delete'' )\n')",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL9",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Insert into CC_DATA_FACTORY_HIST SQL9').Error),0,if(greater(length(activity('Insert into CC_DATA_FACTORY_HIST SQL9').Error),499),499,length(activity('Insert into CC_DATA_FACTORY_HIST SQL9').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy1",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL12",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Insert into CC_DATA_FACTORY_HIST SQL12').Error),0,if(greater(length(activity('Insert into CC_DATA_FACTORY_HIST SQL12').Error),499),499,length(activity('Insert into CC_DATA_FACTORY_HIST SQL12').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy2",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_DATA_FACTORY_HIST SQL7",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Insert into CC_DATA_FACTORY_HIST SQL7').Error),0,if(greater(length(activity('Insert into CC_DATA_FACTORY_HIST SQL7').Error),499),499,length(activity('Insert into CC_DATA_FACTORY_HIST SQL7').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy3",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_CREDIT_ASSIGN_AT SQL10",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Insert into CC_CREDIT_ASSIGN_AT SQL10').Error),0,if(greater(length(activity('Insert into CC_CREDIT_ASSIGN_AT SQL10').Error),499),499,length(activity('Insert into CC_CREDIT_ASSIGN_AT SQL10').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy4",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Insert into CC_CREDIT_ASSIGN_AT SQL13",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('Insert into CC_CREDIT_ASSIGN_AT SQL13').Error),0,if(greater(length(activity('Insert into CC_CREDIT_ASSIGN_AT SQL13').Error),499),499,length(activity('Insert into CC_CREDIT_ASSIGN_AT SQL13').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy5",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MERGE Update CC_CREDIT_ASSIGN SQL6",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('MERGE Update CC_CREDIT_ASSIGN SQL6').Error),0,if(greater(length(activity('MERGE Update CC_CREDIT_ASSIGN SQL6').Error),499),499,length(activity('MERGE Update CC_CREDIT_ASSIGN SQL6').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update CC_DATA_FACTORY Catch Exception_copy1_copy6",
				"description": "",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "MERGE Update or Insert CC_CREDIT_ASSIGN SQL8",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('UPDATE ',pipeline().parameters.SCHEMA,'.CC_DATA_FACTORY\n    SET LAST_UPD = CONVERT(DATETIME2(0),'''\n\t,convertTimeZone(utcNow(),'UTC','SE Asia Standard Time'),'''),\n\tLAST_UPD_BY =''',pipeline().parameters.CREDIT_USER,''',\n\tSTATUS = ''E'',\n\tFILE_NAME = ''',pipeline().parameters.fileDatName,''',\n\tDESCRIPTION = ''',substring(concat('Datafactories Exception : ',activity('MERGE Update or Insert CC_CREDIT_ASSIGN SQL8').Error),0,if(greater(length(activity('MERGE Update or Insert CC_CREDIT_ASSIGN SQL8').Error),499),499,length(activity('MERGE Update or Insert CC_CREDIT_ASSIGN SQL8').Error))),'''\n\tWHERE DATA_ID = ',pipeline().parameters.dataId)",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SCHEMA": {
				"type": "string"
			},
			"DATA_TYPE": {
				"type": "string"
			},
			"CREDIT_USER": {
				"type": "string"
			},
			"inputPath": {
				"type": "string"
			},
			"moveInputPath": {
				"type": "string"
			},
			"fileDatName": {
				"type": "string"
			},
			"dataId": {
				"type": "string"
			},
			"fileSyncName": {
				"type": "string"
			}
		},
		"variables": {
			"haveErrorRow": {
				"type": "Boolean",
				"defaultValue": false
			}
		},
		"annotations": []
	}
}